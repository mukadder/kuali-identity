Fork me on GitHub
jsonschema2pojo  PayPal – The safer, easier way to pay online.   Why?
Generate Plain Old Java Objects from JSON or JSON-Schema.

355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
                        "name": "Active",
                        "sortCode": null,
                        "active": true,
                        "versionNumber": 1,
                        "objectId": "A67AFC7A40D37810E04005950AF118BC",
                        "any": []
                    },
                    "employeeType": {
                        "code": "6",
                        "name": "Staff-Exempt FT",
                        "sortCode": null,
                        "active": true,
                        "versionNumber": 1,
                        "objectId": "A67AFC9C1E046ED4E04005950AF118D4",
                        "any": []
                    },
                    "primaryDepartmentCode": "1510500000",
                    "baseSalaryAmount": "0.00",
                    "primary": true,
                    "versionNumber": 21,
                    "objectId": "c0893f64-3c29-4ef6-ab02-c6ba7af3b23b",
                    "active": true,
                    "any": []
                }
            ]
        },
        "privacyPreferences": {
            "entityId": "U17116978",
            "suppressName": false,
            "suppressAddress": false,
            "suppressEmail": false,
            "suppressPhone": false,
            "suppressPersonal": false,
            "versionNumber": 4,
            "objectId": "C8A3B7C9-DF5E-BB54-EBE9-F4CBB85BB3FA",
            "any": []
        },
        "bioDemographics": null,
        "citizenships": {
            "citizenship": []
        },
        "primaryEmployment": {
            "id": "56843",
            "entityId": "U17116978",
            "employeeId": "U17116978",
            "employmentRecordId": "2",
            "entityAffiliation": {
                "id": "47537",
                "entityId": "U17116978",
                "affiliationType": {
                    "code": "0002",
                    "name": "NREP-Staff",
                    "sortCode": null,
                    "active": true,
                    "employmentAffiliationType": false,
                    "versionNumber": 1,
                    "objectId": "A67AFBBB360068C3E04005950AF118A5",
                    "any": []
                },
                "campusCode": "10",
                "defaultValue": true,
                "active": true,
                "versionNumber": 21,
                "objectId": "74142e32-a432-48af-8245-f0f2e756775e",
                "any": []
            },
            "employeeStatus": {
                "code": "3",
                "name": "Active",
                "sortCode": null,
                "active": true,
                "versionNumber": 1,
                "objectId": "A67AFC7A40D37810E04005950AF118BC",
                "any": []
            },
            "employeeType": {
                "code": "6",
                "name": "Staff-Exempt FT",
                "sortCode": null,
                "active": true,
                "versionNumber": 1,
                "objectId": "A67AFC9C1E046ED4E04005950AF118D4",
                "any": []
            },
            "primaryDepartmentCode": "1510500000",
            "baseSalaryAmount": "0.00",
            "primary": true,
            "versionNumber": 21,
            "objectId": "c0893f64-3c29-4ef6-ab02-c6ba7af3b23b",
            "active": true,
            "any": []
        },
        "defaultAffiliation": {
            "id": "47537",
            "entityId": "U17116978",
            "affiliationType": {
                "code": "0002",
                "name": "NREP-Staff",
                "sortCode": null,
                "active": true,
                "employmentAffiliationType": false,
                "versionNumber": 1,
                "objectId": "A67AFBBB360068C3E04005950AF118A5",
                "any": []
            },
            "campusCode": "10",
            "defaultValue": true,
            "active": true,
            "versionNumber": 21,
            "objectId": "74142e32-a432-48af-8245-f0f2e756775e",
            "any": []
        },
        "defaultName": {
            "id": "48559",
            "entityId": "U17116978",
            "nameType": {
                "code": "PRFR",
                "name": "Preferred",
                "sortCode": "b",
                "active": true,
                "versionNumber": 1,
                "objectId": "5B97C50B03866110E0404F8189D85213",
                "any": []
            },
            "namePrefix": null,
            "nameTitle": null,
            "firstName": "HITESH",
            "middleName": null,
            "lastName": "TARA",
            "nameSuffix": null,
            "compositeName": "TARA, HITESH",
            "namePrefixUnmasked": null,
            "nameTitleUnmasked": null,
            "firstNameUnmasked": "HITESH",
            "middleNameUnmasked": null,
            "lastNameUnmasked": "TARA",
            "nameSuffixUnmasked": null,
            "compositeNameUnmasked": "TARA, HITESH",
            "noteMessage": null,
            "nameChangedDate": null,
            "suppressName": false,
            "defaultValue": true,
            "active": true,
            "versionNumber": 21,
            "objectId": "b6e25e31-2f97-47df-858f-dd8b2619c93f",
            "any": []
        },
        "ethnicities": {
            "ethnicity": []
        },
        "residencies": {
            "residency": []
        },
        "visas": {
            "visa": []
        },
        "versionNumber": 21,
        "objectId": "e5425c4e-381d-498b-b311-9ba6fd79311a",
        "active": true,
        "any": []
    }
}
Preview   Zip  IdentityService-sources.zip
Package
edu.bu.identityApi
Class name
IdentityService
Target language:
Java   Scala
Source type:
JSON Schema   JSON
YAML Schema   YAML
Annotation style:
Jackson 2.x   Jackson 1.x
Gson   Moshi   None
Generate builder methods
Use primitive types
Use long integers
Use double numbers
Use Joda dates
Use Commons-Lang3
Include getters and setters
Include constructors
Include hashCode and equals
Include toString
Include JSR-303 annotations
Allow additional properties
Make classes serializable
Make classes parcelable
Initialize collections
Property word delimiters:
- _
 ×Copy to Clipboard
Preview
-----------------------------------edu.bu.identityApi.Address.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"id",
"entityTypeCode",
"entityId",
"addressType",
"attentionLine",
"line1",
"line2",
"line3",
"city",
"stateProvinceCode",
"postalCode",
"countryCode",
"attentionLineUnmasked",
"line1Unmasked",
"line2Unmasked",
"line3Unmasked",
"cityUnmasked",
"stateProvinceCodeUnmasked",
"postalCodeUnmasked",
"countryCodeUnmasked",
"addressFormat",
"modifiedDate",
"validatedDate",
"validated",
"noteMessage",
"suppressAddress",
"defaultValue",
"active",
"versionNumber",
"objectId",
"any"
})
public class Address implements Serializable
{

@JsonProperty("id")
private String id;
@JsonProperty("entityTypeCode")
private String entityTypeCode;
@JsonProperty("entityId")
private String entityId;
@JsonProperty("addressType")
@Valid
private AddressType addressType;
@JsonProperty("attentionLine")
private Object attentionLine;
@JsonProperty("line1")
private String line1;
@JsonProperty("line2")
private String line2;
@JsonProperty("line3")
private String line3;
@JsonProperty("city")
private String city;
@JsonProperty("stateProvinceCode")
private String stateProvinceCode;
@JsonProperty("postalCode")
private String postalCode;
@JsonProperty("countryCode")
private String countryCode;
@JsonProperty("attentionLineUnmasked")
private Object attentionLineUnmasked;
@JsonProperty("line1Unmasked")
private String line1Unmasked;
@JsonProperty("line2Unmasked")
private String line2Unmasked;
@JsonProperty("line3Unmasked")
private String line3Unmasked;
@JsonProperty("cityUnmasked")
private String cityUnmasked;
@JsonProperty("stateProvinceCodeUnmasked")
private String stateProvinceCodeUnmasked;
@JsonProperty("postalCodeUnmasked")
private String postalCodeUnmasked;
@JsonProperty("countryCodeUnmasked")
private String countryCodeUnmasked;
@JsonProperty("addressFormat")
private Object addressFormat;
@JsonProperty("modifiedDate")
private Object modifiedDate;
@JsonProperty("validatedDate")
private Object validatedDate;
@JsonProperty("validated")
private boolean validated;
@JsonProperty("noteMessage")
private Object noteMessage;
@JsonProperty("suppressAddress")
private boolean suppressAddress;
@JsonProperty("defaultValue")
private boolean defaultValue;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 6196895834873480579L;

@JsonProperty("id")
public String getId() {
return id;
}

@JsonProperty("id")
public void setId(String id) {
this.id = id;
}

public Address withId(String id) {
this.id = id;
return this;
}

@JsonProperty("entityTypeCode")
public String getEntityTypeCode() {
return entityTypeCode;
}

@JsonProperty("entityTypeCode")
public void setEntityTypeCode(String entityTypeCode) {
this.entityTypeCode = entityTypeCode;
}

public Address withEntityTypeCode(String entityTypeCode) {
this.entityTypeCode = entityTypeCode;
return this;
}

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public Address withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("addressType")
public AddressType getAddressType() {
return addressType;
}

@JsonProperty("addressType")
public void setAddressType(AddressType addressType) {
this.addressType = addressType;
}

public Address withAddressType(AddressType addressType) {
this.addressType = addressType;
return this;
}

@JsonProperty("attentionLine")
public Object getAttentionLine() {
return attentionLine;
}

@JsonProperty("attentionLine")
public void setAttentionLine(Object attentionLine) {
this.attentionLine = attentionLine;
}

public Address withAttentionLine(Object attentionLine) {
this.attentionLine = attentionLine;
return this;
}

@JsonProperty("line1")
public String getLine1() {
return line1;
}

@JsonProperty("line1")
public void setLine1(String line1) {
this.line1 = line1;
}

public Address withLine1(String line1) {
this.line1 = line1;
return this;
}

@JsonProperty("line2")
public String getLine2() {
return line2;
}

@JsonProperty("line2")
public void setLine2(String line2) {
this.line2 = line2;
}

public Address withLine2(String line2) {
this.line2 = line2;
return this;
}

@JsonProperty("line3")
public String getLine3() {
return line3;
}

@JsonProperty("line3")
public void setLine3(String line3) {
this.line3 = line3;
}

public Address withLine3(String line3) {
this.line3 = line3;
return this;
}

@JsonProperty("city")
public String getCity() {
return city;
}

@JsonProperty("city")
public void setCity(String city) {
this.city = city;
}

public Address withCity(String city) {
this.city = city;
return this;
}

@JsonProperty("stateProvinceCode")
public String getStateProvinceCode() {
return stateProvinceCode;
}

@JsonProperty("stateProvinceCode")
public void setStateProvinceCode(String stateProvinceCode) {
this.stateProvinceCode = stateProvinceCode;
}

public Address withStateProvinceCode(String stateProvinceCode) {
this.stateProvinceCode = stateProvinceCode;
return this;
}

@JsonProperty("postalCode")
public String getPostalCode() {
return postalCode;
}

@JsonProperty("postalCode")
public void setPostalCode(String postalCode) {
this.postalCode = postalCode;
}

public Address withPostalCode(String postalCode) {
this.postalCode = postalCode;
return this;
}

@JsonProperty("countryCode")
public String getCountryCode() {
return countryCode;
}

@JsonProperty("countryCode")
public void setCountryCode(String countryCode) {
this.countryCode = countryCode;
}

public Address withCountryCode(String countryCode) {
this.countryCode = countryCode;
return this;
}

@JsonProperty("attentionLineUnmasked")
public Object getAttentionLineUnmasked() {
return attentionLineUnmasked;
}

@JsonProperty("attentionLineUnmasked")
public void setAttentionLineUnmasked(Object attentionLineUnmasked) {
this.attentionLineUnmasked = attentionLineUnmasked;
}

public Address withAttentionLineUnmasked(Object attentionLineUnmasked) {
this.attentionLineUnmasked = attentionLineUnmasked;
return this;
}

@JsonProperty("line1Unmasked")
public String getLine1Unmasked() {
return line1Unmasked;
}

@JsonProperty("line1Unmasked")
public void setLine1Unmasked(String line1Unmasked) {
this.line1Unmasked = line1Unmasked;
}

public Address withLine1Unmasked(String line1Unmasked) {
this.line1Unmasked = line1Unmasked;
return this;
}

@JsonProperty("line2Unmasked")
public String getLine2Unmasked() {
return line2Unmasked;
}

@JsonProperty("line2Unmasked")
public void setLine2Unmasked(String line2Unmasked) {
this.line2Unmasked = line2Unmasked;
}

public Address withLine2Unmasked(String line2Unmasked) {
this.line2Unmasked = line2Unmasked;
return this;
}

@JsonProperty("line3Unmasked")
public String getLine3Unmasked() {
return line3Unmasked;
}

@JsonProperty("line3Unmasked")
public void setLine3Unmasked(String line3Unmasked) {
this.line3Unmasked = line3Unmasked;
}

public Address withLine3Unmasked(String line3Unmasked) {
this.line3Unmasked = line3Unmasked;
return this;
}

@JsonProperty("cityUnmasked")
public String getCityUnmasked() {
return cityUnmasked;
}

@JsonProperty("cityUnmasked")
public void setCityUnmasked(String cityUnmasked) {
this.cityUnmasked = cityUnmasked;
}

public Address withCityUnmasked(String cityUnmasked) {
this.cityUnmasked = cityUnmasked;
return this;
}

@JsonProperty("stateProvinceCodeUnmasked")
public String getStateProvinceCodeUnmasked() {
return stateProvinceCodeUnmasked;
}

@JsonProperty("stateProvinceCodeUnmasked")
public void setStateProvinceCodeUnmasked(String stateProvinceCodeUnmasked) {
this.stateProvinceCodeUnmasked = stateProvinceCodeUnmasked;
}

public Address withStateProvinceCodeUnmasked(String stateProvinceCodeUnmasked) {
this.stateProvinceCodeUnmasked = stateProvinceCodeUnmasked;
return this;
}

@JsonProperty("postalCodeUnmasked")
public String getPostalCodeUnmasked() {
return postalCodeUnmasked;
}

@JsonProperty("postalCodeUnmasked")
public void setPostalCodeUnmasked(String postalCodeUnmasked) {
this.postalCodeUnmasked = postalCodeUnmasked;
}

public Address withPostalCodeUnmasked(String postalCodeUnmasked) {
this.postalCodeUnmasked = postalCodeUnmasked;
return this;
}

@JsonProperty("countryCodeUnmasked")
public String getCountryCodeUnmasked() {
return countryCodeUnmasked;
}

@JsonProperty("countryCodeUnmasked")
public void setCountryCodeUnmasked(String countryCodeUnmasked) {
this.countryCodeUnmasked = countryCodeUnmasked;
}

public Address withCountryCodeUnmasked(String countryCodeUnmasked) {
this.countryCodeUnmasked = countryCodeUnmasked;
return this;
}

@JsonProperty("addressFormat")
public Object getAddressFormat() {
return addressFormat;
}

@JsonProperty("addressFormat")
public void setAddressFormat(Object addressFormat) {
this.addressFormat = addressFormat;
}

public Address withAddressFormat(Object addressFormat) {
this.addressFormat = addressFormat;
return this;
}

@JsonProperty("modifiedDate")
public Object getModifiedDate() {
return modifiedDate;
}

@JsonProperty("modifiedDate")
public void setModifiedDate(Object modifiedDate) {
this.modifiedDate = modifiedDate;
}

public Address withModifiedDate(Object modifiedDate) {
this.modifiedDate = modifiedDate;
return this;
}

@JsonProperty("validatedDate")
public Object getValidatedDate() {
return validatedDate;
}

@JsonProperty("validatedDate")
public void setValidatedDate(Object validatedDate) {
this.validatedDate = validatedDate;
}

public Address withValidatedDate(Object validatedDate) {
this.validatedDate = validatedDate;
return this;
}

@JsonProperty("validated")
public boolean isValidated() {
return validated;
}

@JsonProperty("validated")
public void setValidated(boolean validated) {
this.validated = validated;
}

public Address withValidated(boolean validated) {
this.validated = validated;
return this;
}

@JsonProperty("noteMessage")
public Object getNoteMessage() {
return noteMessage;
}

@JsonProperty("noteMessage")
public void setNoteMessage(Object noteMessage) {
this.noteMessage = noteMessage;
}

public Address withNoteMessage(Object noteMessage) {
this.noteMessage = noteMessage;
return this;
}

@JsonProperty("suppressAddress")
public boolean isSuppressAddress() {
return suppressAddress;
}

@JsonProperty("suppressAddress")
public void setSuppressAddress(boolean suppressAddress) {
this.suppressAddress = suppressAddress;
}

public Address withSuppressAddress(boolean suppressAddress) {
this.suppressAddress = suppressAddress;
return this;
}

@JsonProperty("defaultValue")
public boolean isDefaultValue() {
return defaultValue;
}

@JsonProperty("defaultValue")
public void setDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
}

public Address withDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public Address withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public Address withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public Address withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public Address withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public Address withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("id", id).append("entityTypeCode", entityTypeCode).append("entityId", entityId).append("addressType", addressType).append("attentionLine", attentionLine).append("line1", line1).append("line2", line2).append("line3", line3).append("city", city).append("stateProvinceCode", stateProvinceCode).append("postalCode", postalCode).append("countryCode", countryCode).append("attentionLineUnmasked", attentionLineUnmasked).append("line1Unmasked", line1Unmasked).append("line2Unmasked", line2Unmasked).append("line3Unmasked", line3Unmasked).append("cityUnmasked", cityUnmasked).append("stateProvinceCodeUnmasked", stateProvinceCodeUnmasked).append("postalCodeUnmasked", postalCodeUnmasked).append("countryCodeUnmasked", countryCodeUnmasked).append("addressFormat", addressFormat).append("modifiedDate", modifiedDate).append("validatedDate", validatedDate).append("validated", validated).append("noteMessage", noteMessage).append("suppressAddress", suppressAddress).append("defaultValue", defaultValue).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(entityTypeCode).append(entityId).append(validated).append(city).append(id).append(cityUnmasked).append(postalCode).append(suppressAddress).append(postalCodeUnmasked).append(objectId).append(any).append(line3Unmasked).append(countryCodeUnmasked).append(defaultValue).append(addressFormat).append(countryCode).append(addressType).append(attentionLineUnmasked).append(noteMessage).append(line2Unmasked).append(modifiedDate).append(stateProvinceCodeUnmasked).append(line1Unmasked).append(attentionLine).append(validatedDate).append(additionalProperties).append(stateProvinceCode).append(active).append(line1).append(versionNumber).append(line3).append(line2).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof Address) == false) {
return false;
}
Address rhs = ((Address) other);
return new EqualsBuilder().append(entityTypeCode, rhs.entityTypeCode).append(entityId, rhs.entityId).append(validated, rhs.validated).append(city, rhs.city).append(id, rhs.id).append(cityUnmasked, rhs.cityUnmasked).append(postalCode, rhs.postalCode).append(suppressAddress, rhs.suppressAddress).append(postalCodeUnmasked, rhs.postalCodeUnmasked).append(objectId, rhs.objectId).append(any, rhs.any).append(line3Unmasked, rhs.line3Unmasked).append(countryCodeUnmasked, rhs.countryCodeUnmasked).append(defaultValue, rhs.defaultValue).append(addressFormat, rhs.addressFormat).append(countryCode, rhs.countryCode).append(addressType, rhs.addressType).append(attentionLineUnmasked, rhs.attentionLineUnmasked).append(noteMessage, rhs.noteMessage).append(line2Unmasked, rhs.line2Unmasked).append(modifiedDate, rhs.modifiedDate).append(stateProvinceCodeUnmasked, rhs.stateProvinceCodeUnmasked).append(line1Unmasked, rhs.line1Unmasked).append(attentionLine, rhs.attentionLine).append(validatedDate, rhs.validatedDate).append(additionalProperties, rhs.additionalProperties).append(stateProvinceCode, rhs.stateProvinceCode).append(active, rhs.active).append(line1, rhs.line1).append(versionNumber, rhs.versionNumber).append(line3, rhs.line3).append(line2, rhs.line2).isEquals();
}

}
-----------------------------------edu.bu.identityApi.AddressType.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"versionNumber",
"objectId",
"any"
})
public class AddressType implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private String sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 4075992021970854216L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public AddressType withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public AddressType withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public String getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(String sortCode) {
this.sortCode = sortCode;
}

public AddressType withSortCode(String sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public AddressType withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public AddressType withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public AddressType withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public AddressType withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public AddressType withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof AddressType) == false) {
return false;
}
AddressType rhs = ((AddressType) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.AddressType_.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"versionNumber",
"objectId",
"any"
})
public class AddressType_ implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private String sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -8506936978014751302L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public AddressType_ withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public AddressType_ withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public String getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(String sortCode) {
this.sortCode = sortCode;
}

public AddressType_ withSortCode(String sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public AddressType_ withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public AddressType_ withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public AddressType_ withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public AddressType_ withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public AddressType_ withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof AddressType_) == false) {
return false;
}
AddressType_ rhs = ((AddressType_) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.Addresses.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"address"
})
public class Addresses implements Serializable
{

@JsonProperty("address")
@Valid
private List<Address> address = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -2640809338331099953L;

@JsonProperty("address")
public List<Address> getAddress() {
return address;
}

@JsonProperty("address")
public void setAddress(List<Address> address) {
this.address = address;
}

public Addresses withAddress(List<Address> address) {
this.address = address;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public Addresses withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("address", address).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(address).append(additionalProperties).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof Addresses) == false) {
return false;
}
Addresses rhs = ((Addresses) other);
return new EqualsBuilder().append(address, rhs.address).append(additionalProperties, rhs.additionalProperties).isEquals();
}

}
-----------------------------------edu.bu.identityApi.Affiliation.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"id",
"entityId",
"affiliationType",
"campusCode",
"defaultValue",
"active",
"versionNumber",
"objectId",
"any"
})
public class Affiliation implements Serializable
{

@JsonProperty("id")
private String id;
@JsonProperty("entityId")
private String entityId;
@JsonProperty("affiliationType")
@Valid
private AffiliationType affiliationType;
@JsonProperty("campusCode")
private String campusCode;
@JsonProperty("defaultValue")
private boolean defaultValue;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -7903654789606586006L;

@JsonProperty("id")
public String getId() {
return id;
}

@JsonProperty("id")
public void setId(String id) {
this.id = id;
}

public Affiliation withId(String id) {
this.id = id;
return this;
}

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public Affiliation withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("affiliationType")
public AffiliationType getAffiliationType() {
return affiliationType;
}

@JsonProperty("affiliationType")
public void setAffiliationType(AffiliationType affiliationType) {
this.affiliationType = affiliationType;
}

public Affiliation withAffiliationType(AffiliationType affiliationType) {
this.affiliationType = affiliationType;
return this;
}

@JsonProperty("campusCode")
public String getCampusCode() {
return campusCode;
}

@JsonProperty("campusCode")
public void setCampusCode(String campusCode) {
this.campusCode = campusCode;
}

public Affiliation withCampusCode(String campusCode) {
this.campusCode = campusCode;
return this;
}

@JsonProperty("defaultValue")
public boolean isDefaultValue() {
return defaultValue;
}

@JsonProperty("defaultValue")
public void setDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
}

public Affiliation withDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public Affiliation withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public Affiliation withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public Affiliation withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public Affiliation withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public Affiliation withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("id", id).append("entityId", entityId).append("affiliationType", affiliationType).append("campusCode", campusCode).append("defaultValue", defaultValue).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(affiliationType).append(id).append(additionalProperties).append(objectId).append(any).append(entityId).append(active).append(campusCode).append(defaultValue).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof Affiliation) == false) {
return false;
}
Affiliation rhs = ((Affiliation) other);
return new EqualsBuilder().append(affiliationType, rhs.affiliationType).append(id, rhs.id).append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(entityId, rhs.entityId).append(active, rhs.active).append(campusCode, rhs.campusCode).append(defaultValue, rhs.defaultValue).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.AffiliationType.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"employmentAffiliationType",
"versionNumber",
"objectId",
"any"
})
public class AffiliationType implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private Object sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("employmentAffiliationType")
private boolean employmentAffiliationType;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -3420509415826629711L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public AffiliationType withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public AffiliationType withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public Object getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(Object sortCode) {
this.sortCode = sortCode;
}

public AffiliationType withSortCode(Object sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public AffiliationType withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("employmentAffiliationType")
public boolean isEmploymentAffiliationType() {
return employmentAffiliationType;
}

@JsonProperty("employmentAffiliationType")
public void setEmploymentAffiliationType(boolean employmentAffiliationType) {
this.employmentAffiliationType = employmentAffiliationType;
}

public AffiliationType withEmploymentAffiliationType(boolean employmentAffiliationType) {
this.employmentAffiliationType = employmentAffiliationType;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public AffiliationType withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public AffiliationType withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public AffiliationType withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public AffiliationType withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("employmentAffiliationType", employmentAffiliationType).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(employmentAffiliationType).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof AffiliationType) == false) {
return false;
}
AffiliationType rhs = ((AffiliationType) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(employmentAffiliationType, rhs.employmentAffiliationType).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.AffiliationType_.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"employmentAffiliationType",
"versionNumber",
"objectId",
"any"
})
public class AffiliationType_ implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private Object sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("employmentAffiliationType")
private boolean employmentAffiliationType;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -1464842925731544079L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public AffiliationType_ withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public AffiliationType_ withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public Object getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(Object sortCode) {
this.sortCode = sortCode;
}

public AffiliationType_ withSortCode(Object sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public AffiliationType_ withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("employmentAffiliationType")
public boolean isEmploymentAffiliationType() {
return employmentAffiliationType;
}

@JsonProperty("employmentAffiliationType")
public void setEmploymentAffiliationType(boolean employmentAffiliationType) {
this.employmentAffiliationType = employmentAffiliationType;
}

public AffiliationType_ withEmploymentAffiliationType(boolean employmentAffiliationType) {
this.employmentAffiliationType = employmentAffiliationType;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public AffiliationType_ withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public AffiliationType_ withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public AffiliationType_ withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public AffiliationType_ withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("employmentAffiliationType", employmentAffiliationType).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(employmentAffiliationType).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof AffiliationType_) == false) {
return false;
}
AffiliationType_ rhs = ((AffiliationType_) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(employmentAffiliationType, rhs.employmentAffiliationType).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.AffiliationType__.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"employmentAffiliationType",
"versionNumber",
"objectId",
"any"
})
public class AffiliationType__ implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private Object sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("employmentAffiliationType")
private boolean employmentAffiliationType;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -2522312483304679782L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public AffiliationType__ withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public AffiliationType__ withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public Object getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(Object sortCode) {
this.sortCode = sortCode;
}

public AffiliationType__ withSortCode(Object sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public AffiliationType__ withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("employmentAffiliationType")
public boolean isEmploymentAffiliationType() {
return employmentAffiliationType;
}

@JsonProperty("employmentAffiliationType")
public void setEmploymentAffiliationType(boolean employmentAffiliationType) {
this.employmentAffiliationType = employmentAffiliationType;
}

public AffiliationType__ withEmploymentAffiliationType(boolean employmentAffiliationType) {
this.employmentAffiliationType = employmentAffiliationType;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public AffiliationType__ withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public AffiliationType__ withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public AffiliationType__ withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public AffiliationType__ withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("employmentAffiliationType", employmentAffiliationType).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(employmentAffiliationType).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof AffiliationType__) == false) {
return false;
}
AffiliationType__ rhs = ((AffiliationType__) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(employmentAffiliationType, rhs.employmentAffiliationType).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.AffiliationType___.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"employmentAffiliationType",
"versionNumber",
"objectId",
"any"
})
public class AffiliationType___ implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private Object sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("employmentAffiliationType")
private boolean employmentAffiliationType;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 8241838339433942556L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public AffiliationType___ withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public AffiliationType___ withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public Object getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(Object sortCode) {
this.sortCode = sortCode;
}

public AffiliationType___ withSortCode(Object sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public AffiliationType___ withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("employmentAffiliationType")
public boolean isEmploymentAffiliationType() {
return employmentAffiliationType;
}

@JsonProperty("employmentAffiliationType")
public void setEmploymentAffiliationType(boolean employmentAffiliationType) {
this.employmentAffiliationType = employmentAffiliationType;
}

public AffiliationType___ withEmploymentAffiliationType(boolean employmentAffiliationType) {
this.employmentAffiliationType = employmentAffiliationType;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public AffiliationType___ withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public AffiliationType___ withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public AffiliationType___ withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public AffiliationType___ withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("employmentAffiliationType", employmentAffiliationType).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(employmentAffiliationType).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof AffiliationType___) == false) {
return false;
}
AffiliationType___ rhs = ((AffiliationType___) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(employmentAffiliationType, rhs.employmentAffiliationType).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.Affiliations.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"affiliation"
})
public class Affiliations implements Serializable
{

@JsonProperty("affiliation")
@Valid
private List<Affiliation> affiliation = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -2356567037482775822L;

@JsonProperty("affiliation")
public List<Affiliation> getAffiliation() {
return affiliation;
}

@JsonProperty("affiliation")
public void setAffiliation(List<Affiliation> affiliation) {
this.affiliation = affiliation;
}

public Affiliations withAffiliation(List<Affiliation> affiliation) {
this.affiliation = affiliation;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public Affiliations withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("affiliation", affiliation).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(affiliation).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof Affiliations) == false) {
return false;
}
Affiliations rhs = ((Affiliations) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(affiliation, rhs.affiliation).isEquals();
}

}
-----------------------------------edu.bu.identityApi.Citizenships.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"citizenship"
})
public class Citizenships implements Serializable
{

@JsonProperty("citizenship")
@Valid
private List<Object> citizenship = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 7591051039839763617L;

@JsonProperty("citizenship")
public List<Object> getCitizenship() {
return citizenship;
}

@JsonProperty("citizenship")
public void setCitizenship(List<Object> citizenship) {
this.citizenship = citizenship;
}

public Citizenships withCitizenship(List<Object> citizenship) {
this.citizenship = citizenship;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public Citizenships withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("citizenship", citizenship).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(citizenship).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof Citizenships) == false) {
return false;
}
Citizenships rhs = ((Citizenships) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(citizenship, rhs.citizenship).isEquals();
}

}
-----------------------------------edu.bu.identityApi.DefaultAddress.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"id",
"entityTypeCode",
"entityId",
"addressType",
"attentionLine",
"line1",
"line2",
"line3",
"city",
"stateProvinceCode",
"postalCode",
"countryCode",
"attentionLineUnmasked",
"line1Unmasked",
"line2Unmasked",
"line3Unmasked",
"cityUnmasked",
"stateProvinceCodeUnmasked",
"postalCodeUnmasked",
"countryCodeUnmasked",
"addressFormat",
"modifiedDate",
"validatedDate",
"validated",
"noteMessage",
"suppressAddress",
"defaultValue",
"active",
"versionNumber",
"objectId",
"any"
})
public class DefaultAddress implements Serializable
{

@JsonProperty("id")
private String id;
@JsonProperty("entityTypeCode")
private String entityTypeCode;
@JsonProperty("entityId")
private String entityId;
@JsonProperty("addressType")
@Valid
private AddressType_ addressType;
@JsonProperty("attentionLine")
private Object attentionLine;
@JsonProperty("line1")
private String line1;
@JsonProperty("line2")
private String line2;
@JsonProperty("line3")
private String line3;
@JsonProperty("city")
private String city;
@JsonProperty("stateProvinceCode")
private String stateProvinceCode;
@JsonProperty("postalCode")
private String postalCode;
@JsonProperty("countryCode")
private String countryCode;
@JsonProperty("attentionLineUnmasked")
private Object attentionLineUnmasked;
@JsonProperty("line1Unmasked")
private String line1Unmasked;
@JsonProperty("line2Unmasked")
private String line2Unmasked;
@JsonProperty("line3Unmasked")
private String line3Unmasked;
@JsonProperty("cityUnmasked")
private String cityUnmasked;
@JsonProperty("stateProvinceCodeUnmasked")
private String stateProvinceCodeUnmasked;
@JsonProperty("postalCodeUnmasked")
private String postalCodeUnmasked;
@JsonProperty("countryCodeUnmasked")
private String countryCodeUnmasked;
@JsonProperty("addressFormat")
private Object addressFormat;
@JsonProperty("modifiedDate")
private Object modifiedDate;
@JsonProperty("validatedDate")
private Object validatedDate;
@JsonProperty("validated")
private boolean validated;
@JsonProperty("noteMessage")
private Object noteMessage;
@JsonProperty("suppressAddress")
private boolean suppressAddress;
@JsonProperty("defaultValue")
private boolean defaultValue;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -5877743909350759747L;

@JsonProperty("id")
public String getId() {
return id;
}

@JsonProperty("id")
public void setId(String id) {
this.id = id;
}

public DefaultAddress withId(String id) {
this.id = id;
return this;
}

@JsonProperty("entityTypeCode")
public String getEntityTypeCode() {
return entityTypeCode;
}

@JsonProperty("entityTypeCode")
public void setEntityTypeCode(String entityTypeCode) {
this.entityTypeCode = entityTypeCode;
}

public DefaultAddress withEntityTypeCode(String entityTypeCode) {
this.entityTypeCode = entityTypeCode;
return this;
}

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public DefaultAddress withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("addressType")
public AddressType_ getAddressType() {
return addressType;
}

@JsonProperty("addressType")
public void setAddressType(AddressType_ addressType) {
this.addressType = addressType;
}

public DefaultAddress withAddressType(AddressType_ addressType) {
this.addressType = addressType;
return this;
}

@JsonProperty("attentionLine")
public Object getAttentionLine() {
return attentionLine;
}

@JsonProperty("attentionLine")
public void setAttentionLine(Object attentionLine) {
this.attentionLine = attentionLine;
}

public DefaultAddress withAttentionLine(Object attentionLine) {
this.attentionLine = attentionLine;
return this;
}

@JsonProperty("line1")
public String getLine1() {
return line1;
}

@JsonProperty("line1")
public void setLine1(String line1) {
this.line1 = line1;
}

public DefaultAddress withLine1(String line1) {
this.line1 = line1;
return this;
}

@JsonProperty("line2")
public String getLine2() {
return line2;
}

@JsonProperty("line2")
public void setLine2(String line2) {
this.line2 = line2;
}

public DefaultAddress withLine2(String line2) {
this.line2 = line2;
return this;
}

@JsonProperty("line3")
public String getLine3() {
return line3;
}

@JsonProperty("line3")
public void setLine3(String line3) {
this.line3 = line3;
}

public DefaultAddress withLine3(String line3) {
this.line3 = line3;
return this;
}

@JsonProperty("city")
public String getCity() {
return city;
}

@JsonProperty("city")
public void setCity(String city) {
this.city = city;
}

public DefaultAddress withCity(String city) {
this.city = city;
return this;
}

@JsonProperty("stateProvinceCode")
public String getStateProvinceCode() {
return stateProvinceCode;
}

@JsonProperty("stateProvinceCode")
public void setStateProvinceCode(String stateProvinceCode) {
this.stateProvinceCode = stateProvinceCode;
}

public DefaultAddress withStateProvinceCode(String stateProvinceCode) {
this.stateProvinceCode = stateProvinceCode;
return this;
}

@JsonProperty("postalCode")
public String getPostalCode() {
return postalCode;
}

@JsonProperty("postalCode")
public void setPostalCode(String postalCode) {
this.postalCode = postalCode;
}

public DefaultAddress withPostalCode(String postalCode) {
this.postalCode = postalCode;
return this;
}

@JsonProperty("countryCode")
public String getCountryCode() {
return countryCode;
}

@JsonProperty("countryCode")
public void setCountryCode(String countryCode) {
this.countryCode = countryCode;
}

public DefaultAddress withCountryCode(String countryCode) {
this.countryCode = countryCode;
return this;
}

@JsonProperty("attentionLineUnmasked")
public Object getAttentionLineUnmasked() {
return attentionLineUnmasked;
}

@JsonProperty("attentionLineUnmasked")
public void setAttentionLineUnmasked(Object attentionLineUnmasked) {
this.attentionLineUnmasked = attentionLineUnmasked;
}

public DefaultAddress withAttentionLineUnmasked(Object attentionLineUnmasked) {
this.attentionLineUnmasked = attentionLineUnmasked;
return this;
}

@JsonProperty("line1Unmasked")
public String getLine1Unmasked() {
return line1Unmasked;
}

@JsonProperty("line1Unmasked")
public void setLine1Unmasked(String line1Unmasked) {
this.line1Unmasked = line1Unmasked;
}

public DefaultAddress withLine1Unmasked(String line1Unmasked) {
this.line1Unmasked = line1Unmasked;
return this;
}

@JsonProperty("line2Unmasked")
public String getLine2Unmasked() {
return line2Unmasked;
}

@JsonProperty("line2Unmasked")
public void setLine2Unmasked(String line2Unmasked) {
this.line2Unmasked = line2Unmasked;
}

public DefaultAddress withLine2Unmasked(String line2Unmasked) {
this.line2Unmasked = line2Unmasked;
return this;
}

@JsonProperty("line3Unmasked")
public String getLine3Unmasked() {
return line3Unmasked;
}

@JsonProperty("line3Unmasked")
public void setLine3Unmasked(String line3Unmasked) {
this.line3Unmasked = line3Unmasked;
}

public DefaultAddress withLine3Unmasked(String line3Unmasked) {
this.line3Unmasked = line3Unmasked;
return this;
}

@JsonProperty("cityUnmasked")
public String getCityUnmasked() {
return cityUnmasked;
}

@JsonProperty("cityUnmasked")
public void setCityUnmasked(String cityUnmasked) {
this.cityUnmasked = cityUnmasked;
}

public DefaultAddress withCityUnmasked(String cityUnmasked) {
this.cityUnmasked = cityUnmasked;
return this;
}

@JsonProperty("stateProvinceCodeUnmasked")
public String getStateProvinceCodeUnmasked() {
return stateProvinceCodeUnmasked;
}

@JsonProperty("stateProvinceCodeUnmasked")
public void setStateProvinceCodeUnmasked(String stateProvinceCodeUnmasked) {
this.stateProvinceCodeUnmasked = stateProvinceCodeUnmasked;
}

public DefaultAddress withStateProvinceCodeUnmasked(String stateProvinceCodeUnmasked) {
this.stateProvinceCodeUnmasked = stateProvinceCodeUnmasked;
return this;
}

@JsonProperty("postalCodeUnmasked")
public String getPostalCodeUnmasked() {
return postalCodeUnmasked;
}

@JsonProperty("postalCodeUnmasked")
public void setPostalCodeUnmasked(String postalCodeUnmasked) {
this.postalCodeUnmasked = postalCodeUnmasked;
}

public DefaultAddress withPostalCodeUnmasked(String postalCodeUnmasked) {
this.postalCodeUnmasked = postalCodeUnmasked;
return this;
}

@JsonProperty("countryCodeUnmasked")
public String getCountryCodeUnmasked() {
return countryCodeUnmasked;
}

@JsonProperty("countryCodeUnmasked")
public void setCountryCodeUnmasked(String countryCodeUnmasked) {
this.countryCodeUnmasked = countryCodeUnmasked;
}

public DefaultAddress withCountryCodeUnmasked(String countryCodeUnmasked) {
this.countryCodeUnmasked = countryCodeUnmasked;
return this;
}

@JsonProperty("addressFormat")
public Object getAddressFormat() {
return addressFormat;
}

@JsonProperty("addressFormat")
public void setAddressFormat(Object addressFormat) {
this.addressFormat = addressFormat;
}

public DefaultAddress withAddressFormat(Object addressFormat) {
this.addressFormat = addressFormat;
return this;
}

@JsonProperty("modifiedDate")
public Object getModifiedDate() {
return modifiedDate;
}

@JsonProperty("modifiedDate")
public void setModifiedDate(Object modifiedDate) {
this.modifiedDate = modifiedDate;
}

public DefaultAddress withModifiedDate(Object modifiedDate) {
this.modifiedDate = modifiedDate;
return this;
}

@JsonProperty("validatedDate")
public Object getValidatedDate() {
return validatedDate;
}

@JsonProperty("validatedDate")
public void setValidatedDate(Object validatedDate) {
this.validatedDate = validatedDate;
}

public DefaultAddress withValidatedDate(Object validatedDate) {
this.validatedDate = validatedDate;
return this;
}

@JsonProperty("validated")
public boolean isValidated() {
return validated;
}

@JsonProperty("validated")
public void setValidated(boolean validated) {
this.validated = validated;
}

public DefaultAddress withValidated(boolean validated) {
this.validated = validated;
return this;
}

@JsonProperty("noteMessage")
public Object getNoteMessage() {
return noteMessage;
}

@JsonProperty("noteMessage")
public void setNoteMessage(Object noteMessage) {
this.noteMessage = noteMessage;
}

public DefaultAddress withNoteMessage(Object noteMessage) {
this.noteMessage = noteMessage;
return this;
}

@JsonProperty("suppressAddress")
public boolean isSuppressAddress() {
return suppressAddress;
}

@JsonProperty("suppressAddress")
public void setSuppressAddress(boolean suppressAddress) {
this.suppressAddress = suppressAddress;
}

public DefaultAddress withSuppressAddress(boolean suppressAddress) {
this.suppressAddress = suppressAddress;
return this;
}

@JsonProperty("defaultValue")
public boolean isDefaultValue() {
return defaultValue;
}

@JsonProperty("defaultValue")
public void setDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
}

public DefaultAddress withDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public DefaultAddress withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public DefaultAddress withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public DefaultAddress withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public DefaultAddress withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public DefaultAddress withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("id", id).append("entityTypeCode", entityTypeCode).append("entityId", entityId).append("addressType", addressType).append("attentionLine", attentionLine).append("line1", line1).append("line2", line2).append("line3", line3).append("city", city).append("stateProvinceCode", stateProvinceCode).append("postalCode", postalCode).append("countryCode", countryCode).append("attentionLineUnmasked", attentionLineUnmasked).append("line1Unmasked", line1Unmasked).append("line2Unmasked", line2Unmasked).append("line3Unmasked", line3Unmasked).append("cityUnmasked", cityUnmasked).append("stateProvinceCodeUnmasked", stateProvinceCodeUnmasked).append("postalCodeUnmasked", postalCodeUnmasked).append("countryCodeUnmasked", countryCodeUnmasked).append("addressFormat", addressFormat).append("modifiedDate", modifiedDate).append("validatedDate", validatedDate).append("validated", validated).append("noteMessage", noteMessage).append("suppressAddress", suppressAddress).append("defaultValue", defaultValue).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(entityTypeCode).append(entityId).append(validated).append(city).append(id).append(cityUnmasked).append(postalCode).append(suppressAddress).append(postalCodeUnmasked).append(objectId).append(any).append(line3Unmasked).append(countryCodeUnmasked).append(defaultValue).append(addressFormat).append(countryCode).append(addressType).append(attentionLineUnmasked).append(noteMessage).append(line2Unmasked).append(modifiedDate).append(stateProvinceCodeUnmasked).append(line1Unmasked).append(attentionLine).append(validatedDate).append(additionalProperties).append(stateProvinceCode).append(active).append(line1).append(versionNumber).append(line3).append(line2).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof DefaultAddress) == false) {
return false;
}
DefaultAddress rhs = ((DefaultAddress) other);
return new EqualsBuilder().append(entityTypeCode, rhs.entityTypeCode).append(entityId, rhs.entityId).append(validated, rhs.validated).append(city, rhs.city).append(id, rhs.id).append(cityUnmasked, rhs.cityUnmasked).append(postalCode, rhs.postalCode).append(suppressAddress, rhs.suppressAddress).append(postalCodeUnmasked, rhs.postalCodeUnmasked).append(objectId, rhs.objectId).append(any, rhs.any).append(line3Unmasked, rhs.line3Unmasked).append(countryCodeUnmasked, rhs.countryCodeUnmasked).append(defaultValue, rhs.defaultValue).append(addressFormat, rhs.addressFormat).append(countryCode, rhs.countryCode).append(addressType, rhs.addressType).append(attentionLineUnmasked, rhs.attentionLineUnmasked).append(noteMessage, rhs.noteMessage).append(line2Unmasked, rhs.line2Unmasked).append(modifiedDate, rhs.modifiedDate).append(stateProvinceCodeUnmasked, rhs.stateProvinceCodeUnmasked).append(line1Unmasked, rhs.line1Unmasked).append(attentionLine, rhs.attentionLine).append(validatedDate, rhs.validatedDate).append(additionalProperties, rhs.additionalProperties).append(stateProvinceCode, rhs.stateProvinceCode).append(active, rhs.active).append(line1, rhs.line1).append(versionNumber, rhs.versionNumber).append(line3, rhs.line3).append(line2, rhs.line2).isEquals();
}

}
-----------------------------------edu.bu.identityApi.DefaultAffiliation.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"id",
"entityId",
"affiliationType",
"campusCode",
"defaultValue",
"active",
"versionNumber",
"objectId",
"any"
})
public class DefaultAffiliation implements Serializable
{

@JsonProperty("id")
private String id;
@JsonProperty("entityId")
private String entityId;
@JsonProperty("affiliationType")
@Valid
private AffiliationType___ affiliationType;
@JsonProperty("campusCode")
private String campusCode;
@JsonProperty("defaultValue")
private boolean defaultValue;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 6981634241087577065L;

@JsonProperty("id")
public String getId() {
return id;
}

@JsonProperty("id")
public void setId(String id) {
this.id = id;
}

public DefaultAffiliation withId(String id) {
this.id = id;
return this;
}

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public DefaultAffiliation withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("affiliationType")
public AffiliationType___ getAffiliationType() {
return affiliationType;
}

@JsonProperty("affiliationType")
public void setAffiliationType(AffiliationType___ affiliationType) {
this.affiliationType = affiliationType;
}

public DefaultAffiliation withAffiliationType(AffiliationType___ affiliationType) {
this.affiliationType = affiliationType;
return this;
}

@JsonProperty("campusCode")
public String getCampusCode() {
return campusCode;
}

@JsonProperty("campusCode")
public void setCampusCode(String campusCode) {
this.campusCode = campusCode;
}

public DefaultAffiliation withCampusCode(String campusCode) {
this.campusCode = campusCode;
return this;
}

@JsonProperty("defaultValue")
public boolean isDefaultValue() {
return defaultValue;
}

@JsonProperty("defaultValue")
public void setDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
}

public DefaultAffiliation withDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public DefaultAffiliation withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public DefaultAffiliation withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public DefaultAffiliation withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public DefaultAffiliation withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public DefaultAffiliation withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("id", id).append("entityId", entityId).append("affiliationType", affiliationType).append("campusCode", campusCode).append("defaultValue", defaultValue).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(affiliationType).append(id).append(additionalProperties).append(objectId).append(any).append(entityId).append(active).append(campusCode).append(defaultValue).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof DefaultAffiliation) == false) {
return false;
}
DefaultAffiliation rhs = ((DefaultAffiliation) other);
return new EqualsBuilder().append(affiliationType, rhs.affiliationType).append(id, rhs.id).append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(entityId, rhs.entityId).append(active, rhs.active).append(campusCode, rhs.campusCode).append(defaultValue, rhs.defaultValue).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.DefaultEmailAddress.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"id",
"entityTypeCode",
"entityId",
"emailType",
"emailAddress",
"emailAddressUnmasked",
"suppressEmail",
"defaultValue",
"active",
"versionNumber",
"objectId",
"any"
})
public class DefaultEmailAddress implements Serializable
{

@JsonProperty("id")
private String id;
@JsonProperty("entityTypeCode")
private String entityTypeCode;
@JsonProperty("entityId")
private String entityId;
@JsonProperty("emailType")
@Valid
private EmailType_ emailType;
@JsonProperty("emailAddress")
private String emailAddress;
@JsonProperty("emailAddressUnmasked")
private String emailAddressUnmasked;
@JsonProperty("suppressEmail")
private boolean suppressEmail;
@JsonProperty("defaultValue")
private boolean defaultValue;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -5580448000287167048L;

@JsonProperty("id")
public String getId() {
return id;
}

@JsonProperty("id")
public void setId(String id) {
this.id = id;
}

public DefaultEmailAddress withId(String id) {
this.id = id;
return this;
}

@JsonProperty("entityTypeCode")
public String getEntityTypeCode() {
return entityTypeCode;
}

@JsonProperty("entityTypeCode")
public void setEntityTypeCode(String entityTypeCode) {
this.entityTypeCode = entityTypeCode;
}

public DefaultEmailAddress withEntityTypeCode(String entityTypeCode) {
this.entityTypeCode = entityTypeCode;
return this;
}

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public DefaultEmailAddress withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("emailType")
public EmailType_ getEmailType() {
return emailType;
}

@JsonProperty("emailType")
public void setEmailType(EmailType_ emailType) {
this.emailType = emailType;
}

public DefaultEmailAddress withEmailType(EmailType_ emailType) {
this.emailType = emailType;
return this;
}

@JsonProperty("emailAddress")
public String getEmailAddress() {
return emailAddress;
}

@JsonProperty("emailAddress")
public void setEmailAddress(String emailAddress) {
this.emailAddress = emailAddress;
}

public DefaultEmailAddress withEmailAddress(String emailAddress) {
this.emailAddress = emailAddress;
return this;
}

@JsonProperty("emailAddressUnmasked")
public String getEmailAddressUnmasked() {
return emailAddressUnmasked;
}

@JsonProperty("emailAddressUnmasked")
public void setEmailAddressUnmasked(String emailAddressUnmasked) {
this.emailAddressUnmasked = emailAddressUnmasked;
}

public DefaultEmailAddress withEmailAddressUnmasked(String emailAddressUnmasked) {
this.emailAddressUnmasked = emailAddressUnmasked;
return this;
}

@JsonProperty("suppressEmail")
public boolean isSuppressEmail() {
return suppressEmail;
}

@JsonProperty("suppressEmail")
public void setSuppressEmail(boolean suppressEmail) {
this.suppressEmail = suppressEmail;
}

public DefaultEmailAddress withSuppressEmail(boolean suppressEmail) {
this.suppressEmail = suppressEmail;
return this;
}

@JsonProperty("defaultValue")
public boolean isDefaultValue() {
return defaultValue;
}

@JsonProperty("defaultValue")
public void setDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
}

public DefaultEmailAddress withDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public DefaultEmailAddress withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public DefaultEmailAddress withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public DefaultEmailAddress withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public DefaultEmailAddress withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public DefaultEmailAddress withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("id", id).append("entityTypeCode", entityTypeCode).append("entityId", entityId).append("emailType", emailType).append("emailAddress", emailAddress).append("emailAddressUnmasked", emailAddressUnmasked).append("suppressEmail", suppressEmail).append("defaultValue", defaultValue).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(entityTypeCode).append(suppressEmail).append(entityId).append(emailAddress).append(emailAddressUnmasked).append(id).append(emailType).append(additionalProperties).append(objectId).append(any).append(active).append(defaultValue).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof DefaultEmailAddress) == false) {
return false;
}
DefaultEmailAddress rhs = ((DefaultEmailAddress) other);
return new EqualsBuilder().append(entityTypeCode, rhs.entityTypeCode).append(suppressEmail, rhs.suppressEmail).append(entityId, rhs.entityId).append(emailAddress, rhs.emailAddress).append(emailAddressUnmasked, rhs.emailAddressUnmasked).append(id, rhs.id).append(emailType, rhs.emailType).append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(active, rhs.active).append(defaultValue, rhs.defaultValue).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.DefaultName.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"id",
"entityId",
"nameType",
"namePrefix",
"nameTitle",
"firstName",
"middleName",
"lastName",
"nameSuffix",
"compositeName",
"namePrefixUnmasked",
"nameTitleUnmasked",
"firstNameUnmasked",
"middleNameUnmasked",
"lastNameUnmasked",
"nameSuffixUnmasked",
"compositeNameUnmasked",
"noteMessage",
"nameChangedDate",
"suppressName",
"defaultValue",
"active",
"versionNumber",
"objectId",
"any"
})
public class DefaultName implements Serializable
{

@JsonProperty("id")
private String id;
@JsonProperty("entityId")
private String entityId;
@JsonProperty("nameType")
@Valid
private NameType_ nameType;
@JsonProperty("namePrefix")
private Object namePrefix;
@JsonProperty("nameTitle")
private Object nameTitle;
@JsonProperty("firstName")
private String firstName;
@JsonProperty("middleName")
private Object middleName;
@JsonProperty("lastName")
private String lastName;
@JsonProperty("nameSuffix")
private Object nameSuffix;
@JsonProperty("compositeName")
private String compositeName;
@JsonProperty("namePrefixUnmasked")
private Object namePrefixUnmasked;
@JsonProperty("nameTitleUnmasked")
private Object nameTitleUnmasked;
@JsonProperty("firstNameUnmasked")
private String firstNameUnmasked;
@JsonProperty("middleNameUnmasked")
private Object middleNameUnmasked;
@JsonProperty("lastNameUnmasked")
private String lastNameUnmasked;
@JsonProperty("nameSuffixUnmasked")
private Object nameSuffixUnmasked;
@JsonProperty("compositeNameUnmasked")
private String compositeNameUnmasked;
@JsonProperty("noteMessage")
private Object noteMessage;
@JsonProperty("nameChangedDate")
private Object nameChangedDate;
@JsonProperty("suppressName")
private boolean suppressName;
@JsonProperty("defaultValue")
private boolean defaultValue;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -1654363872392834446L;

@JsonProperty("id")
public String getId() {
return id;
}

@JsonProperty("id")
public void setId(String id) {
this.id = id;
}

public DefaultName withId(String id) {
this.id = id;
return this;
}

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public DefaultName withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("nameType")
public NameType_ getNameType() {
return nameType;
}

@JsonProperty("nameType")
public void setNameType(NameType_ nameType) {
this.nameType = nameType;
}

public DefaultName withNameType(NameType_ nameType) {
this.nameType = nameType;
return this;
}

@JsonProperty("namePrefix")
public Object getNamePrefix() {
return namePrefix;
}

@JsonProperty("namePrefix")
public void setNamePrefix(Object namePrefix) {
this.namePrefix = namePrefix;
}

public DefaultName withNamePrefix(Object namePrefix) {
this.namePrefix = namePrefix;
return this;
}

@JsonProperty("nameTitle")
public Object getNameTitle() {
return nameTitle;
}

@JsonProperty("nameTitle")
public void setNameTitle(Object nameTitle) {
this.nameTitle = nameTitle;
}

public DefaultName withNameTitle(Object nameTitle) {
this.nameTitle = nameTitle;
return this;
}

@JsonProperty("firstName")
public String getFirstName() {
return firstName;
}

@JsonProperty("firstName")
public void setFirstName(String firstName) {
this.firstName = firstName;
}

public DefaultName withFirstName(String firstName) {
this.firstName = firstName;
return this;
}

@JsonProperty("middleName")
public Object getMiddleName() {
return middleName;
}

@JsonProperty("middleName")
public void setMiddleName(Object middleName) {
this.middleName = middleName;
}

public DefaultName withMiddleName(Object middleName) {
this.middleName = middleName;
return this;
}

@JsonProperty("lastName")
public String getLastName() {
return lastName;
}

@JsonProperty("lastName")
public void setLastName(String lastName) {
this.lastName = lastName;
}

public DefaultName withLastName(String lastName) {
this.lastName = lastName;
return this;
}

@JsonProperty("nameSuffix")
public Object getNameSuffix() {
return nameSuffix;
}

@JsonProperty("nameSuffix")
public void setNameSuffix(Object nameSuffix) {
this.nameSuffix = nameSuffix;
}

public DefaultName withNameSuffix(Object nameSuffix) {
this.nameSuffix = nameSuffix;
return this;
}

@JsonProperty("compositeName")
public String getCompositeName() {
return compositeName;
}

@JsonProperty("compositeName")
public void setCompositeName(String compositeName) {
this.compositeName = compositeName;
}

public DefaultName withCompositeName(String compositeName) {
this.compositeName = compositeName;
return this;
}

@JsonProperty("namePrefixUnmasked")
public Object getNamePrefixUnmasked() {
return namePrefixUnmasked;
}

@JsonProperty("namePrefixUnmasked")
public void setNamePrefixUnmasked(Object namePrefixUnmasked) {
this.namePrefixUnmasked = namePrefixUnmasked;
}

public DefaultName withNamePrefixUnmasked(Object namePrefixUnmasked) {
this.namePrefixUnmasked = namePrefixUnmasked;
return this;
}

@JsonProperty("nameTitleUnmasked")
public Object getNameTitleUnmasked() {
return nameTitleUnmasked;
}

@JsonProperty("nameTitleUnmasked")
public void setNameTitleUnmasked(Object nameTitleUnmasked) {
this.nameTitleUnmasked = nameTitleUnmasked;
}

public DefaultName withNameTitleUnmasked(Object nameTitleUnmasked) {
this.nameTitleUnmasked = nameTitleUnmasked;
return this;
}

@JsonProperty("firstNameUnmasked")
public String getFirstNameUnmasked() {
return firstNameUnmasked;
}

@JsonProperty("firstNameUnmasked")
public void setFirstNameUnmasked(String firstNameUnmasked) {
this.firstNameUnmasked = firstNameUnmasked;
}

public DefaultName withFirstNameUnmasked(String firstNameUnmasked) {
this.firstNameUnmasked = firstNameUnmasked;
return this;
}

@JsonProperty("middleNameUnmasked")
public Object getMiddleNameUnmasked() {
return middleNameUnmasked;
}

@JsonProperty("middleNameUnmasked")
public void setMiddleNameUnmasked(Object middleNameUnmasked) {
this.middleNameUnmasked = middleNameUnmasked;
}

public DefaultName withMiddleNameUnmasked(Object middleNameUnmasked) {
this.middleNameUnmasked = middleNameUnmasked;
return this;
}

@JsonProperty("lastNameUnmasked")
public String getLastNameUnmasked() {
return lastNameUnmasked;
}

@JsonProperty("lastNameUnmasked")
public void setLastNameUnmasked(String lastNameUnmasked) {
this.lastNameUnmasked = lastNameUnmasked;
}

public DefaultName withLastNameUnmasked(String lastNameUnmasked) {
this.lastNameUnmasked = lastNameUnmasked;
return this;
}

@JsonProperty("nameSuffixUnmasked")
public Object getNameSuffixUnmasked() {
return nameSuffixUnmasked;
}

@JsonProperty("nameSuffixUnmasked")
public void setNameSuffixUnmasked(Object nameSuffixUnmasked) {
this.nameSuffixUnmasked = nameSuffixUnmasked;
}

public DefaultName withNameSuffixUnmasked(Object nameSuffixUnmasked) {
this.nameSuffixUnmasked = nameSuffixUnmasked;
return this;
}

@JsonProperty("compositeNameUnmasked")
public String getCompositeNameUnmasked() {
return compositeNameUnmasked;
}

@JsonProperty("compositeNameUnmasked")
public void setCompositeNameUnmasked(String compositeNameUnmasked) {
this.compositeNameUnmasked = compositeNameUnmasked;
}

public DefaultName withCompositeNameUnmasked(String compositeNameUnmasked) {
this.compositeNameUnmasked = compositeNameUnmasked;
return this;
}

@JsonProperty("noteMessage")
public Object getNoteMessage() {
return noteMessage;
}

@JsonProperty("noteMessage")
public void setNoteMessage(Object noteMessage) {
this.noteMessage = noteMessage;
}

public DefaultName withNoteMessage(Object noteMessage) {
this.noteMessage = noteMessage;
return this;
}

@JsonProperty("nameChangedDate")
public Object getNameChangedDate() {
return nameChangedDate;
}

@JsonProperty("nameChangedDate")
public void setNameChangedDate(Object nameChangedDate) {
this.nameChangedDate = nameChangedDate;
}

public DefaultName withNameChangedDate(Object nameChangedDate) {
this.nameChangedDate = nameChangedDate;
return this;
}

@JsonProperty("suppressName")
public boolean isSuppressName() {
return suppressName;
}

@JsonProperty("suppressName")
public void setSuppressName(boolean suppressName) {
this.suppressName = suppressName;
}

public DefaultName withSuppressName(boolean suppressName) {
this.suppressName = suppressName;
return this;
}

@JsonProperty("defaultValue")
public boolean isDefaultValue() {
return defaultValue;
}

@JsonProperty("defaultValue")
public void setDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
}

public DefaultName withDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public DefaultName withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public DefaultName withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public DefaultName withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public DefaultName withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public DefaultName withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("id", id).append("entityId", entityId).append("nameType", nameType).append("namePrefix", namePrefix).append("nameTitle", nameTitle).append("firstName", firstName).append("middleName", middleName).append("lastName", lastName).append("nameSuffix", nameSuffix).append("compositeName", compositeName).append("namePrefixUnmasked", namePrefixUnmasked).append("nameTitleUnmasked", nameTitleUnmasked).append("firstNameUnmasked", firstNameUnmasked).append("middleNameUnmasked", middleNameUnmasked).append("lastNameUnmasked", lastNameUnmasked).append("nameSuffixUnmasked", nameSuffixUnmasked).append("compositeNameUnmasked", compositeNameUnmasked).append("noteMessage", noteMessage).append("nameChangedDate", nameChangedDate).append("suppressName", suppressName).append("defaultValue", defaultValue).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(nameSuffix).append(nameTitle).append(entityId).append(nameType).append(id).append(suppressName).append(objectId).append(any).append(nameChangedDate).append(namePrefixUnmasked).append(compositeNameUnmasked).append(defaultValue).append(firstName).append(namePrefix).append(nameTitleUnmasked).append(middleName).append(lastName).append(compositeName).append(lastNameUnmasked).append(noteMessage).append(additionalProperties).append(middleNameUnmasked).append(nameSuffixUnmasked).append(active).append(firstNameUnmasked).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof DefaultName) == false) {
return false;
}
DefaultName rhs = ((DefaultName) other);
return new EqualsBuilder().append(nameSuffix, rhs.nameSuffix).append(nameTitle, rhs.nameTitle).append(entityId, rhs.entityId).append(nameType, rhs.nameType).append(id, rhs.id).append(suppressName, rhs.suppressName).append(objectId, rhs.objectId).append(any, rhs.any).append(nameChangedDate, rhs.nameChangedDate).append(namePrefixUnmasked, rhs.namePrefixUnmasked).append(compositeNameUnmasked, rhs.compositeNameUnmasked).append(defaultValue, rhs.defaultValue).append(firstName, rhs.firstName).append(namePrefix, rhs.namePrefix).append(nameTitleUnmasked, rhs.nameTitleUnmasked).append(middleName, rhs.middleName).append(lastName, rhs.lastName).append(compositeName, rhs.compositeName).append(lastNameUnmasked, rhs.lastNameUnmasked).append(noteMessage, rhs.noteMessage).append(additionalProperties, rhs.additionalProperties).append(middleNameUnmasked, rhs.middleNameUnmasked).append(nameSuffixUnmasked, rhs.nameSuffixUnmasked).append(active, rhs.active).append(firstNameUnmasked, rhs.firstNameUnmasked).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.DefaultPhoneNumber.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"id",
"entityTypeCode",
"entityId",
"phoneType",
"countryCode",
"phoneNumber",
"extensionNumber",
"formattedPhoneNumber",
"countryCodeUnmasked",
"phoneNumberUnmasked",
"extensionNumberUnmasked",
"formattedPhoneNumberUnmasked",
"suppressPhone",
"defaultValue",
"active",
"versionNumber",
"objectId",
"any"
})
public class DefaultPhoneNumber implements Serializable
{

@JsonProperty("id")
private String id;
@JsonProperty("entityTypeCode")
private String entityTypeCode;
@JsonProperty("entityId")
private String entityId;
@JsonProperty("phoneType")
@Valid
private PhoneType_ phoneType;
@JsonProperty("countryCode")
private Object countryCode;
@JsonProperty("phoneNumber")
private String phoneNumber;
@JsonProperty("extensionNumber")
private Object extensionNumber;
@JsonProperty("formattedPhoneNumber")
private String formattedPhoneNumber;
@JsonProperty("countryCodeUnmasked")
private Object countryCodeUnmasked;
@JsonProperty("phoneNumberUnmasked")
private String phoneNumberUnmasked;
@JsonProperty("extensionNumberUnmasked")
private Object extensionNumberUnmasked;
@JsonProperty("formattedPhoneNumberUnmasked")
private String formattedPhoneNumberUnmasked;
@JsonProperty("suppressPhone")
private boolean suppressPhone;
@JsonProperty("defaultValue")
private boolean defaultValue;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 3761977388545309343L;

@JsonProperty("id")
public String getId() {
return id;
}

@JsonProperty("id")
public void setId(String id) {
this.id = id;
}

public DefaultPhoneNumber withId(String id) {
this.id = id;
return this;
}

@JsonProperty("entityTypeCode")
public String getEntityTypeCode() {
return entityTypeCode;
}

@JsonProperty("entityTypeCode")
public void setEntityTypeCode(String entityTypeCode) {
this.entityTypeCode = entityTypeCode;
}

public DefaultPhoneNumber withEntityTypeCode(String entityTypeCode) {
this.entityTypeCode = entityTypeCode;
return this;
}

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public DefaultPhoneNumber withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("phoneType")
public PhoneType_ getPhoneType() {
return phoneType;
}

@JsonProperty("phoneType")
public void setPhoneType(PhoneType_ phoneType) {
this.phoneType = phoneType;
}

public DefaultPhoneNumber withPhoneType(PhoneType_ phoneType) {
this.phoneType = phoneType;
return this;
}

@JsonProperty("countryCode")
public Object getCountryCode() {
return countryCode;
}

@JsonProperty("countryCode")
public void setCountryCode(Object countryCode) {
this.countryCode = countryCode;
}

public DefaultPhoneNumber withCountryCode(Object countryCode) {
this.countryCode = countryCode;
return this;
}

@JsonProperty("phoneNumber")
public String getPhoneNumber() {
return phoneNumber;
}

@JsonProperty("phoneNumber")
public void setPhoneNumber(String phoneNumber) {
this.phoneNumber = phoneNumber;
}

public DefaultPhoneNumber withPhoneNumber(String phoneNumber) {
this.phoneNumber = phoneNumber;
return this;
}

@JsonProperty("extensionNumber")
public Object getExtensionNumber() {
return extensionNumber;
}

@JsonProperty("extensionNumber")
public void setExtensionNumber(Object extensionNumber) {
this.extensionNumber = extensionNumber;
}

public DefaultPhoneNumber withExtensionNumber(Object extensionNumber) {
this.extensionNumber = extensionNumber;
return this;
}

@JsonProperty("formattedPhoneNumber")
public String getFormattedPhoneNumber() {
return formattedPhoneNumber;
}

@JsonProperty("formattedPhoneNumber")
public void setFormattedPhoneNumber(String formattedPhoneNumber) {
this.formattedPhoneNumber = formattedPhoneNumber;
}

public DefaultPhoneNumber withFormattedPhoneNumber(String formattedPhoneNumber) {
this.formattedPhoneNumber = formattedPhoneNumber;
return this;
}

@JsonProperty("countryCodeUnmasked")
public Object getCountryCodeUnmasked() {
return countryCodeUnmasked;
}

@JsonProperty("countryCodeUnmasked")
public void setCountryCodeUnmasked(Object countryCodeUnmasked) {
this.countryCodeUnmasked = countryCodeUnmasked;
}

public DefaultPhoneNumber withCountryCodeUnmasked(Object countryCodeUnmasked) {
this.countryCodeUnmasked = countryCodeUnmasked;
return this;
}

@JsonProperty("phoneNumberUnmasked")
public String getPhoneNumberUnmasked() {
return phoneNumberUnmasked;
}

@JsonProperty("phoneNumberUnmasked")
public void setPhoneNumberUnmasked(String phoneNumberUnmasked) {
this.phoneNumberUnmasked = phoneNumberUnmasked;
}

public DefaultPhoneNumber withPhoneNumberUnmasked(String phoneNumberUnmasked) {
this.phoneNumberUnmasked = phoneNumberUnmasked;
return this;
}

@JsonProperty("extensionNumberUnmasked")
public Object getExtensionNumberUnmasked() {
return extensionNumberUnmasked;
}

@JsonProperty("extensionNumberUnmasked")
public void setExtensionNumberUnmasked(Object extensionNumberUnmasked) {
this.extensionNumberUnmasked = extensionNumberUnmasked;
}

public DefaultPhoneNumber withExtensionNumberUnmasked(Object extensionNumberUnmasked) {
this.extensionNumberUnmasked = extensionNumberUnmasked;
return this;
}

@JsonProperty("formattedPhoneNumberUnmasked")
public String getFormattedPhoneNumberUnmasked() {
return formattedPhoneNumberUnmasked;
}

@JsonProperty("formattedPhoneNumberUnmasked")
public void setFormattedPhoneNumberUnmasked(String formattedPhoneNumberUnmasked) {
this.formattedPhoneNumberUnmasked = formattedPhoneNumberUnmasked;
}

public DefaultPhoneNumber withFormattedPhoneNumberUnmasked(String formattedPhoneNumberUnmasked) {
this.formattedPhoneNumberUnmasked = formattedPhoneNumberUnmasked;
return this;
}

@JsonProperty("suppressPhone")
public boolean isSuppressPhone() {
return suppressPhone;
}

@JsonProperty("suppressPhone")
public void setSuppressPhone(boolean suppressPhone) {
this.suppressPhone = suppressPhone;
}

public DefaultPhoneNumber withSuppressPhone(boolean suppressPhone) {
this.suppressPhone = suppressPhone;
return this;
}

@JsonProperty("defaultValue")
public boolean isDefaultValue() {
return defaultValue;
}

@JsonProperty("defaultValue")
public void setDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
}

public DefaultPhoneNumber withDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public DefaultPhoneNumber withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public DefaultPhoneNumber withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public DefaultPhoneNumber withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public DefaultPhoneNumber withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public DefaultPhoneNumber withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("id", id).append("entityTypeCode", entityTypeCode).append("entityId", entityId).append("phoneType", phoneType).append("countryCode", countryCode).append("phoneNumber", phoneNumber).append("extensionNumber", extensionNumber).append("formattedPhoneNumber", formattedPhoneNumber).append("countryCodeUnmasked", countryCodeUnmasked).append("phoneNumberUnmasked", phoneNumberUnmasked).append("extensionNumberUnmasked", extensionNumberUnmasked).append("formattedPhoneNumberUnmasked", formattedPhoneNumberUnmasked).append("suppressPhone", suppressPhone).append("defaultValue", defaultValue).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(formattedPhoneNumberUnmasked).append(suppressPhone).append(phoneNumberUnmasked).append(phoneType).append(entityTypeCode).append(extensionNumberUnmasked).append(countryCode).append(entityId).append(id).append(phoneNumber).append(formattedPhoneNumber).append(additionalProperties).append(objectId).append(any).append(active).append(countryCodeUnmasked).append(defaultValue).append(extensionNumber).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof DefaultPhoneNumber) == false) {
return false;
}
DefaultPhoneNumber rhs = ((DefaultPhoneNumber) other);
return new EqualsBuilder().append(formattedPhoneNumberUnmasked, rhs.formattedPhoneNumberUnmasked).append(suppressPhone, rhs.suppressPhone).append(phoneNumberUnmasked, rhs.phoneNumberUnmasked).append(phoneType, rhs.phoneType).append(entityTypeCode, rhs.entityTypeCode).append(extensionNumberUnmasked, rhs.extensionNumberUnmasked).append(countryCode, rhs.countryCode).append(entityId, rhs.entityId).append(id, rhs.id).append(phoneNumber, rhs.phoneNumber).append(formattedPhoneNumber, rhs.formattedPhoneNumber).append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(active, rhs.active).append(countryCodeUnmasked, rhs.countryCodeUnmasked).append(defaultValue, rhs.defaultValue).append(extensionNumber, rhs.extensionNumber).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.EmailAddress.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"id",
"entityTypeCode",
"entityId",
"emailType",
"emailAddress",
"emailAddressUnmasked",
"suppressEmail",
"defaultValue",
"active",
"versionNumber",
"objectId",
"any"
})
public class EmailAddress implements Serializable
{

@JsonProperty("id")
private String id;
@JsonProperty("entityTypeCode")
private String entityTypeCode;
@JsonProperty("entityId")
private String entityId;
@JsonProperty("emailType")
@Valid
private EmailType emailType;
@JsonProperty("emailAddress")
private String emailAddress;
@JsonProperty("emailAddressUnmasked")
private String emailAddressUnmasked;
@JsonProperty("suppressEmail")
private boolean suppressEmail;
@JsonProperty("defaultValue")
private boolean defaultValue;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 4341903934574062129L;

@JsonProperty("id")
public String getId() {
return id;
}

@JsonProperty("id")
public void setId(String id) {
this.id = id;
}

public EmailAddress withId(String id) {
this.id = id;
return this;
}

@JsonProperty("entityTypeCode")
public String getEntityTypeCode() {
return entityTypeCode;
}

@JsonProperty("entityTypeCode")
public void setEntityTypeCode(String entityTypeCode) {
this.entityTypeCode = entityTypeCode;
}

public EmailAddress withEntityTypeCode(String entityTypeCode) {
this.entityTypeCode = entityTypeCode;
return this;
}

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public EmailAddress withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("emailType")
public EmailType getEmailType() {
return emailType;
}

@JsonProperty("emailType")
public void setEmailType(EmailType emailType) {
this.emailType = emailType;
}

public EmailAddress withEmailType(EmailType emailType) {
this.emailType = emailType;
return this;
}

@JsonProperty("emailAddress")
public String getEmailAddress() {
return emailAddress;
}

@JsonProperty("emailAddress")
public void setEmailAddress(String emailAddress) {
this.emailAddress = emailAddress;
}

public EmailAddress withEmailAddress(String emailAddress) {
this.emailAddress = emailAddress;
return this;
}

@JsonProperty("emailAddressUnmasked")
public String getEmailAddressUnmasked() {
return emailAddressUnmasked;
}

@JsonProperty("emailAddressUnmasked")
public void setEmailAddressUnmasked(String emailAddressUnmasked) {
this.emailAddressUnmasked = emailAddressUnmasked;
}

public EmailAddress withEmailAddressUnmasked(String emailAddressUnmasked) {
this.emailAddressUnmasked = emailAddressUnmasked;
return this;
}

@JsonProperty("suppressEmail")
public boolean isSuppressEmail() {
return suppressEmail;
}

@JsonProperty("suppressEmail")
public void setSuppressEmail(boolean suppressEmail) {
this.suppressEmail = suppressEmail;
}

public EmailAddress withSuppressEmail(boolean suppressEmail) {
this.suppressEmail = suppressEmail;
return this;
}

@JsonProperty("defaultValue")
public boolean isDefaultValue() {
return defaultValue;
}

@JsonProperty("defaultValue")
public void setDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
}

public EmailAddress withDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public EmailAddress withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public EmailAddress withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public EmailAddress withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public EmailAddress withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public EmailAddress withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("id", id).append("entityTypeCode", entityTypeCode).append("entityId", entityId).append("emailType", emailType).append("emailAddress", emailAddress).append("emailAddressUnmasked", emailAddressUnmasked).append("suppressEmail", suppressEmail).append("defaultValue", defaultValue).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(entityTypeCode).append(suppressEmail).append(entityId).append(emailAddress).append(emailAddressUnmasked).append(id).append(emailType).append(additionalProperties).append(objectId).append(any).append(active).append(defaultValue).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof EmailAddress) == false) {
return false;
}
EmailAddress rhs = ((EmailAddress) other);
return new EqualsBuilder().append(entityTypeCode, rhs.entityTypeCode).append(suppressEmail, rhs.suppressEmail).append(entityId, rhs.entityId).append(emailAddress, rhs.emailAddress).append(emailAddressUnmasked, rhs.emailAddressUnmasked).append(id, rhs.id).append(emailType, rhs.emailType).append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(active, rhs.active).append(defaultValue, rhs.defaultValue).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.EmailAddresses.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"emailAddress"
})
public class EmailAddresses implements Serializable
{

@JsonProperty("emailAddress")
@Valid
private List<EmailAddress> emailAddress = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -1246011163194454557L;

@JsonProperty("emailAddress")
public List<EmailAddress> getEmailAddress() {
return emailAddress;
}

@JsonProperty("emailAddress")
public void setEmailAddress(List<EmailAddress> emailAddress) {
this.emailAddress = emailAddress;
}

public EmailAddresses withEmailAddress(List<EmailAddress> emailAddress) {
this.emailAddress = emailAddress;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public EmailAddresses withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("emailAddress", emailAddress).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(emailAddress).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof EmailAddresses) == false) {
return false;
}
EmailAddresses rhs = ((EmailAddresses) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(emailAddress, rhs.emailAddress).isEquals();
}

}
-----------------------------------edu.bu.identityApi.EmailType.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"versionNumber",
"objectId",
"any"
})
public class EmailType implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private String sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -1486841066269379291L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public EmailType withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public EmailType withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public String getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(String sortCode) {
this.sortCode = sortCode;
}

public EmailType withSortCode(String sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public EmailType withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public EmailType withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public EmailType withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public EmailType withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public EmailType withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof EmailType) == false) {
return false;
}
EmailType rhs = ((EmailType) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.EmailType_.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"versionNumber",
"objectId",
"any"
})
public class EmailType_ implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private String sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -5752246554336105778L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public EmailType_ withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public EmailType_ withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public String getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(String sortCode) {
this.sortCode = sortCode;
}

public EmailType_ withSortCode(String sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public EmailType_ withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public EmailType_ withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public EmailType_ withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public EmailType_ withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public EmailType_ withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof EmailType_) == false) {
return false;
}
EmailType_ rhs = ((EmailType_) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.EmployeeStatus.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"versionNumber",
"objectId",
"any"
})
public class EmployeeStatus implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private Object sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -8870767531563828412L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public EmployeeStatus withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public EmployeeStatus withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public Object getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(Object sortCode) {
this.sortCode = sortCode;
}

public EmployeeStatus withSortCode(Object sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public EmployeeStatus withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public EmployeeStatus withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public EmployeeStatus withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public EmployeeStatus withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public EmployeeStatus withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof EmployeeStatus) == false) {
return false;
}
EmployeeStatus rhs = ((EmployeeStatus) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.EmployeeStatus_.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"versionNumber",
"objectId",
"any"
})
public class EmployeeStatus_ implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private Object sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 4557885679337473916L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public EmployeeStatus_ withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public EmployeeStatus_ withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public Object getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(Object sortCode) {
this.sortCode = sortCode;
}

public EmployeeStatus_ withSortCode(Object sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public EmployeeStatus_ withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public EmployeeStatus_ withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public EmployeeStatus_ withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public EmployeeStatus_ withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public EmployeeStatus_ withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof EmployeeStatus_) == false) {
return false;
}
EmployeeStatus_ rhs = ((EmployeeStatus_) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.EmployeeType.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"versionNumber",
"objectId",
"any"
})
public class EmployeeType implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private Object sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -9090723553780771190L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public EmployeeType withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public EmployeeType withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public Object getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(Object sortCode) {
this.sortCode = sortCode;
}

public EmployeeType withSortCode(Object sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public EmployeeType withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public EmployeeType withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public EmployeeType withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public EmployeeType withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public EmployeeType withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof EmployeeType) == false) {
return false;
}
EmployeeType rhs = ((EmployeeType) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.EmployeeType_.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"versionNumber",
"objectId",
"any"
})
public class EmployeeType_ implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private Object sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 8262909348644970053L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public EmployeeType_ withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public EmployeeType_ withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public Object getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(Object sortCode) {
this.sortCode = sortCode;
}

public EmployeeType_ withSortCode(Object sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public EmployeeType_ withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public EmployeeType_ withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public EmployeeType_ withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public EmployeeType_ withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public EmployeeType_ withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof EmployeeType_) == false) {
return false;
}
EmployeeType_ rhs = ((EmployeeType_) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.Employment.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"id",
"entityId",
"employeeId",
"employmentRecordId",
"entityAffiliation",
"employeeStatus",
"employeeType",
"primaryDepartmentCode",
"baseSalaryAmount",
"primary",
"versionNumber",
"objectId",
"active",
"any"
})
public class Employment implements Serializable
{

@JsonProperty("id")
private String id;
@JsonProperty("entityId")
private String entityId;
@JsonProperty("employeeId")
private String employeeId;
@JsonProperty("employmentRecordId")
private String employmentRecordId;
@JsonProperty("entityAffiliation")
@Valid
private EntityAffiliation entityAffiliation;
@JsonProperty("employeeStatus")
@Valid
private EmployeeStatus employeeStatus;
@JsonProperty("employeeType")
@Valid
private EmployeeType employeeType;
@JsonProperty("primaryDepartmentCode")
private String primaryDepartmentCode;
@JsonProperty("baseSalaryAmount")
private String baseSalaryAmount;
@JsonProperty("primary")
private boolean primary;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("active")
private boolean active;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 6254832226025071996L;

@JsonProperty("id")
public String getId() {
return id;
}

@JsonProperty("id")
public void setId(String id) {
this.id = id;
}

public Employment withId(String id) {
this.id = id;
return this;
}

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public Employment withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("employeeId")
public String getEmployeeId() {
return employeeId;
}

@JsonProperty("employeeId")
public void setEmployeeId(String employeeId) {
this.employeeId = employeeId;
}

public Employment withEmployeeId(String employeeId) {
this.employeeId = employeeId;
return this;
}

@JsonProperty("employmentRecordId")
public String getEmploymentRecordId() {
return employmentRecordId;
}

@JsonProperty("employmentRecordId")
public void setEmploymentRecordId(String employmentRecordId) {
this.employmentRecordId = employmentRecordId;
}

public Employment withEmploymentRecordId(String employmentRecordId) {
this.employmentRecordId = employmentRecordId;
return this;
}

@JsonProperty("entityAffiliation")
public EntityAffiliation getEntityAffiliation() {
return entityAffiliation;
}

@JsonProperty("entityAffiliation")
public void setEntityAffiliation(EntityAffiliation entityAffiliation) {
this.entityAffiliation = entityAffiliation;
}

public Employment withEntityAffiliation(EntityAffiliation entityAffiliation) {
this.entityAffiliation = entityAffiliation;
return this;
}

@JsonProperty("employeeStatus")
public EmployeeStatus getEmployeeStatus() {
return employeeStatus;
}

@JsonProperty("employeeStatus")
public void setEmployeeStatus(EmployeeStatus employeeStatus) {
this.employeeStatus = employeeStatus;
}

public Employment withEmployeeStatus(EmployeeStatus employeeStatus) {
this.employeeStatus = employeeStatus;
return this;
}

@JsonProperty("employeeType")
public EmployeeType getEmployeeType() {
return employeeType;
}

@JsonProperty("employeeType")
public void setEmployeeType(EmployeeType employeeType) {
this.employeeType = employeeType;
}

public Employment withEmployeeType(EmployeeType employeeType) {
this.employeeType = employeeType;
return this;
}

@JsonProperty("primaryDepartmentCode")
public String getPrimaryDepartmentCode() {
return primaryDepartmentCode;
}

@JsonProperty("primaryDepartmentCode")
public void setPrimaryDepartmentCode(String primaryDepartmentCode) {
this.primaryDepartmentCode = primaryDepartmentCode;
}

public Employment withPrimaryDepartmentCode(String primaryDepartmentCode) {
this.primaryDepartmentCode = primaryDepartmentCode;
return this;
}

@JsonProperty("baseSalaryAmount")
public String getBaseSalaryAmount() {
return baseSalaryAmount;
}

@JsonProperty("baseSalaryAmount")
public void setBaseSalaryAmount(String baseSalaryAmount) {
this.baseSalaryAmount = baseSalaryAmount;
}

public Employment withBaseSalaryAmount(String baseSalaryAmount) {
this.baseSalaryAmount = baseSalaryAmount;
return this;
}

@JsonProperty("primary")
public boolean isPrimary() {
return primary;
}

@JsonProperty("primary")
public void setPrimary(boolean primary) {
this.primary = primary;
}

public Employment withPrimary(boolean primary) {
this.primary = primary;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public Employment withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public Employment withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public Employment withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public Employment withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public Employment withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("id", id).append("entityId", entityId).append("employeeId", employeeId).append("employmentRecordId", employmentRecordId).append("entityAffiliation", entityAffiliation).append("employeeStatus", employeeStatus).append("employeeType", employeeType).append("primaryDepartmentCode", primaryDepartmentCode).append("baseSalaryAmount", baseSalaryAmount).append("primary", primary).append("versionNumber", versionNumber).append("objectId", objectId).append("active", active).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(employeeType).append(employeeId).append(baseSalaryAmount).append(primaryDepartmentCode).append(entityId).append(employeeStatus).append(entityAffiliation).append(id).append(employmentRecordId).append(additionalProperties).append(objectId).append(any).append(primary).append(active).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof Employment) == false) {
return false;
}
Employment rhs = ((Employment) other);
return new EqualsBuilder().append(employeeType, rhs.employeeType).append(employeeId, rhs.employeeId).append(baseSalaryAmount, rhs.baseSalaryAmount).append(primaryDepartmentCode, rhs.primaryDepartmentCode).append(entityId, rhs.entityId).append(employeeStatus, rhs.employeeStatus).append(entityAffiliation, rhs.entityAffiliation).append(id, rhs.id).append(employmentRecordId, rhs.employmentRecordId).append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(primary, rhs.primary).append(active, rhs.active).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.EmploymentInformation.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"employment"
})
public class EmploymentInformation implements Serializable
{

@JsonProperty("employment")
@Valid
private List<Employment> employment = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 5175323956855769352L;

@JsonProperty("employment")
public List<Employment> getEmployment() {
return employment;
}

@JsonProperty("employment")
public void setEmployment(List<Employment> employment) {
this.employment = employment;
}

public EmploymentInformation withEmployment(List<Employment> employment) {
this.employment = employment;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public EmploymentInformation withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("employment", employment).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(employment).append(additionalProperties).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof EmploymentInformation) == false) {
return false;
}
EmploymentInformation rhs = ((EmploymentInformation) other);
return new EqualsBuilder().append(employment, rhs.employment).append(additionalProperties, rhs.additionalProperties).isEquals();
}

}
-----------------------------------edu.bu.identityApi.Entity.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"id",
"principals",
"entityTypeContactInfos",
"externalIdentifiers",
"affiliations",
"names",
"employmentInformation",
"privacyPreferences",
"bioDemographics",
"citizenships",
"primaryEmployment",
"defaultAffiliation",
"defaultName",
"ethnicities",
"residencies",
"visas",
"versionNumber",
"objectId",
"active",
"any"
})
public class Entity implements Serializable
{

@JsonProperty("id")
private String id;
@JsonProperty("principals")
@Valid
private Principals principals;
@JsonProperty("entityTypeContactInfos")
@Valid
private EntityTypeContactInfos entityTypeContactInfos;
@JsonProperty("externalIdentifiers")
@Valid
private ExternalIdentifiers externalIdentifiers;
@JsonProperty("affiliations")
@Valid
private Affiliations affiliations;
@JsonProperty("names")
@Valid
private Names names;
@JsonProperty("employmentInformation")
@Valid
private EmploymentInformation employmentInformation;
@JsonProperty("privacyPreferences")
@Valid
private PrivacyPreferences privacyPreferences;
@JsonProperty("bioDemographics")
private Object bioDemographics;
@JsonProperty("citizenships")
@Valid
private Citizenships citizenships;
@JsonProperty("primaryEmployment")
@Valid
private PrimaryEmployment primaryEmployment;
@JsonProperty("defaultAffiliation")
@Valid
private DefaultAffiliation defaultAffiliation;
@JsonProperty("defaultName")
@Valid
private DefaultName defaultName;
@JsonProperty("ethnicities")
@Valid
private Ethnicities ethnicities;
@JsonProperty("residencies")
@Valid
private Residencies residencies;
@JsonProperty("visas")
@Valid
private Visas visas;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("active")
private boolean active;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -4782925332448337540L;

@JsonProperty("id")
public String getId() {
return id;
}

@JsonProperty("id")
public void setId(String id) {
this.id = id;
}

public Entity withId(String id) {
this.id = id;
return this;
}

@JsonProperty("principals")
public Principals getPrincipals() {
return principals;
}

@JsonProperty("principals")
public void setPrincipals(Principals principals) {
this.principals = principals;
}

public Entity withPrincipals(Principals principals) {
this.principals = principals;
return this;
}

@JsonProperty("entityTypeContactInfos")
public EntityTypeContactInfos getEntityTypeContactInfos() {
return entityTypeContactInfos;
}

@JsonProperty("entityTypeContactInfos")
public void setEntityTypeContactInfos(EntityTypeContactInfos entityTypeContactInfos) {
this.entityTypeContactInfos = entityTypeContactInfos;
}

public Entity withEntityTypeContactInfos(EntityTypeContactInfos entityTypeContactInfos) {
this.entityTypeContactInfos = entityTypeContactInfos;
return this;
}

@JsonProperty("externalIdentifiers")
public ExternalIdentifiers getExternalIdentifiers() {
return externalIdentifiers;
}

@JsonProperty("externalIdentifiers")
public void setExternalIdentifiers(ExternalIdentifiers externalIdentifiers) {
this.externalIdentifiers = externalIdentifiers;
}

public Entity withExternalIdentifiers(ExternalIdentifiers externalIdentifiers) {
this.externalIdentifiers = externalIdentifiers;
return this;
}

@JsonProperty("affiliations")
public Affiliations getAffiliations() {
return affiliations;
}

@JsonProperty("affiliations")
public void setAffiliations(Affiliations affiliations) {
this.affiliations = affiliations;
}

public Entity withAffiliations(Affiliations affiliations) {
this.affiliations = affiliations;
return this;
}

@JsonProperty("names")
public Names getNames() {
return names;
}

@JsonProperty("names")
public void setNames(Names names) {
this.names = names;
}

public Entity withNames(Names names) {
this.names = names;
return this;
}

@JsonProperty("employmentInformation")
public EmploymentInformation getEmploymentInformation() {
return employmentInformation;
}

@JsonProperty("employmentInformation")
public void setEmploymentInformation(EmploymentInformation employmentInformation) {
this.employmentInformation = employmentInformation;
}

public Entity withEmploymentInformation(EmploymentInformation employmentInformation) {
this.employmentInformation = employmentInformation;
return this;
}

@JsonProperty("privacyPreferences")
public PrivacyPreferences getPrivacyPreferences() {
return privacyPreferences;
}

@JsonProperty("privacyPreferences")
public void setPrivacyPreferences(PrivacyPreferences privacyPreferences) {
this.privacyPreferences = privacyPreferences;
}

public Entity withPrivacyPreferences(PrivacyPreferences privacyPreferences) {
this.privacyPreferences = privacyPreferences;
return this;
}

@JsonProperty("bioDemographics")
public Object getBioDemographics() {
return bioDemographics;
}

@JsonProperty("bioDemographics")
public void setBioDemographics(Object bioDemographics) {
this.bioDemographics = bioDemographics;
}

public Entity withBioDemographics(Object bioDemographics) {
this.bioDemographics = bioDemographics;
return this;
}

@JsonProperty("citizenships")
public Citizenships getCitizenships() {
return citizenships;
}

@JsonProperty("citizenships")
public void setCitizenships(Citizenships citizenships) {
this.citizenships = citizenships;
}

public Entity withCitizenships(Citizenships citizenships) {
this.citizenships = citizenships;
return this;
}

@JsonProperty("primaryEmployment")
public PrimaryEmployment getPrimaryEmployment() {
return primaryEmployment;
}

@JsonProperty("primaryEmployment")
public void setPrimaryEmployment(PrimaryEmployment primaryEmployment) {
this.primaryEmployment = primaryEmployment;
}

public Entity withPrimaryEmployment(PrimaryEmployment primaryEmployment) {
this.primaryEmployment = primaryEmployment;
return this;
}

@JsonProperty("defaultAffiliation")
public DefaultAffiliation getDefaultAffiliation() {
return defaultAffiliation;
}

@JsonProperty("defaultAffiliation")
public void setDefaultAffiliation(DefaultAffiliation defaultAffiliation) {
this.defaultAffiliation = defaultAffiliation;
}

public Entity withDefaultAffiliation(DefaultAffiliation defaultAffiliation) {
this.defaultAffiliation = defaultAffiliation;
return this;
}

@JsonProperty("defaultName")
public DefaultName getDefaultName() {
return defaultName;
}

@JsonProperty("defaultName")
public void setDefaultName(DefaultName defaultName) {
this.defaultName = defaultName;
}

public Entity withDefaultName(DefaultName defaultName) {
this.defaultName = defaultName;
return this;
}

@JsonProperty("ethnicities")
public Ethnicities getEthnicities() {
return ethnicities;
}

@JsonProperty("ethnicities")
public void setEthnicities(Ethnicities ethnicities) {
this.ethnicities = ethnicities;
}

public Entity withEthnicities(Ethnicities ethnicities) {
this.ethnicities = ethnicities;
return this;
}

@JsonProperty("residencies")
public Residencies getResidencies() {
return residencies;
}

@JsonProperty("residencies")
public void setResidencies(Residencies residencies) {
this.residencies = residencies;
}

public Entity withResidencies(Residencies residencies) {
this.residencies = residencies;
return this;
}

@JsonProperty("visas")
public Visas getVisas() {
return visas;
}

@JsonProperty("visas")
public void setVisas(Visas visas) {
this.visas = visas;
}

public Entity withVisas(Visas visas) {
this.visas = visas;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public Entity withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public Entity withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public Entity withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public Entity withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public Entity withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("id", id).append("principals", principals).append("entityTypeContactInfos", entityTypeContactInfos).append("externalIdentifiers", externalIdentifiers).append("affiliations", affiliations).append("names", names).append("employmentInformation", employmentInformation).append("privacyPreferences", privacyPreferences).append("bioDemographics", bioDemographics).append("citizenships", citizenships).append("primaryEmployment", primaryEmployment).append("defaultAffiliation", defaultAffiliation).append("defaultName", defaultName).append("ethnicities", ethnicities).append("residencies", residencies).append("visas", visas).append("versionNumber", versionNumber).append("objectId", objectId).append("active", active).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(visas).append(defaultName).append(affiliations).append(ethnicities).append(entityTypeContactInfos).append(externalIdentifiers).append(defaultAffiliation).append(principals).append(citizenships).append(privacyPreferences).append(residencies).append(id).append(employmentInformation).append(bioDemographics).append(primaryEmployment).append(additionalProperties).append(objectId).append(names).append(any).append(active).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof Entity) == false) {
return false;
}
Entity rhs = ((Entity) other);
return new EqualsBuilder().append(visas, rhs.visas).append(defaultName, rhs.defaultName).append(affiliations, rhs.affiliations).append(ethnicities, rhs.ethnicities).append(entityTypeContactInfos, rhs.entityTypeContactInfos).append(externalIdentifiers, rhs.externalIdentifiers).append(defaultAffiliation, rhs.defaultAffiliation).append(principals, rhs.principals).append(citizenships, rhs.citizenships).append(privacyPreferences, rhs.privacyPreferences).append(residencies, rhs.residencies).append(id, rhs.id).append(employmentInformation, rhs.employmentInformation).append(bioDemographics, rhs.bioDemographics).append(primaryEmployment, rhs.primaryEmployment).append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(names, rhs.names).append(any, rhs.any).append(active, rhs.active).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.EntityAffiliation.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"id",
"entityId",
"affiliationType",
"campusCode",
"defaultValue",
"active",
"versionNumber",
"objectId",
"any"
})
public class EntityAffiliation implements Serializable
{

@JsonProperty("id")
private String id;
@JsonProperty("entityId")
private String entityId;
@JsonProperty("affiliationType")
@Valid
private AffiliationType_ affiliationType;
@JsonProperty("campusCode")
private String campusCode;
@JsonProperty("defaultValue")
private boolean defaultValue;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -5774892288302125519L;

@JsonProperty("id")
public String getId() {
return id;
}

@JsonProperty("id")
public void setId(String id) {
this.id = id;
}

public EntityAffiliation withId(String id) {
this.id = id;
return this;
}

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public EntityAffiliation withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("affiliationType")
public AffiliationType_ getAffiliationType() {
return affiliationType;
}

@JsonProperty("affiliationType")
public void setAffiliationType(AffiliationType_ affiliationType) {
this.affiliationType = affiliationType;
}

public EntityAffiliation withAffiliationType(AffiliationType_ affiliationType) {
this.affiliationType = affiliationType;
return this;
}

@JsonProperty("campusCode")
public String getCampusCode() {
return campusCode;
}

@JsonProperty("campusCode")
public void setCampusCode(String campusCode) {
this.campusCode = campusCode;
}

public EntityAffiliation withCampusCode(String campusCode) {
this.campusCode = campusCode;
return this;
}

@JsonProperty("defaultValue")
public boolean isDefaultValue() {
return defaultValue;
}

@JsonProperty("defaultValue")
public void setDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
}

public EntityAffiliation withDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public EntityAffiliation withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public EntityAffiliation withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public EntityAffiliation withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public EntityAffiliation withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public EntityAffiliation withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("id", id).append("entityId", entityId).append("affiliationType", affiliationType).append("campusCode", campusCode).append("defaultValue", defaultValue).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(affiliationType).append(id).append(additionalProperties).append(objectId).append(any).append(entityId).append(active).append(campusCode).append(defaultValue).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof EntityAffiliation) == false) {
return false;
}
EntityAffiliation rhs = ((EntityAffiliation) other);
return new EqualsBuilder().append(affiliationType, rhs.affiliationType).append(id, rhs.id).append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(entityId, rhs.entityId).append(active, rhs.active).append(campusCode, rhs.campusCode).append(defaultValue, rhs.defaultValue).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.EntityAffiliation_.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"id",
"entityId",
"affiliationType",
"campusCode",
"defaultValue",
"active",
"versionNumber",
"objectId",
"any"
})
public class EntityAffiliation_ implements Serializable
{

@JsonProperty("id")
private String id;
@JsonProperty("entityId")
private String entityId;
@JsonProperty("affiliationType")
@Valid
private AffiliationType__ affiliationType;
@JsonProperty("campusCode")
private String campusCode;
@JsonProperty("defaultValue")
private boolean defaultValue;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 1021231313522073771L;

@JsonProperty("id")
public String getId() {
return id;
}

@JsonProperty("id")
public void setId(String id) {
this.id = id;
}

public EntityAffiliation_ withId(String id) {
this.id = id;
return this;
}

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public EntityAffiliation_ withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("affiliationType")
public AffiliationType__ getAffiliationType() {
return affiliationType;
}

@JsonProperty("affiliationType")
public void setAffiliationType(AffiliationType__ affiliationType) {
this.affiliationType = affiliationType;
}

public EntityAffiliation_ withAffiliationType(AffiliationType__ affiliationType) {
this.affiliationType = affiliationType;
return this;
}

@JsonProperty("campusCode")
public String getCampusCode() {
return campusCode;
}

@JsonProperty("campusCode")
public void setCampusCode(String campusCode) {
this.campusCode = campusCode;
}

public EntityAffiliation_ withCampusCode(String campusCode) {
this.campusCode = campusCode;
return this;
}

@JsonProperty("defaultValue")
public boolean isDefaultValue() {
return defaultValue;
}

@JsonProperty("defaultValue")
public void setDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
}

public EntityAffiliation_ withDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public EntityAffiliation_ withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public EntityAffiliation_ withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public EntityAffiliation_ withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public EntityAffiliation_ withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public EntityAffiliation_ withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("id", id).append("entityId", entityId).append("affiliationType", affiliationType).append("campusCode", campusCode).append("defaultValue", defaultValue).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(affiliationType).append(id).append(additionalProperties).append(objectId).append(any).append(entityId).append(active).append(campusCode).append(defaultValue).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof EntityAffiliation_) == false) {
return false;
}
EntityAffiliation_ rhs = ((EntityAffiliation_) other);
return new EqualsBuilder().append(affiliationType, rhs.affiliationType).append(id, rhs.id).append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(entityId, rhs.entityId).append(active, rhs.active).append(campusCode, rhs.campusCode).append(defaultValue, rhs.defaultValue).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.EntityType.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"versionNumber",
"objectId",
"any"
})
public class EntityType implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private String sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -4293506425752778067L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public EntityType withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public EntityType withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public String getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(String sortCode) {
this.sortCode = sortCode;
}

public EntityType withSortCode(String sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public EntityType withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public EntityType withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public EntityType withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public EntityType withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public EntityType withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof EntityType) == false) {
return false;
}
EntityType rhs = ((EntityType) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.EntityTypeContactInfo.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"entityId",
"entityTypeCode",
"entityType",
"addresses",
"emailAddresses",
"phoneNumbers",
"defaultAddress",
"defaultEmailAddress",
"defaultPhoneNumber",
"versionNumber",
"objectId",
"active",
"any"
})
public class EntityTypeContactInfo implements Serializable
{

@JsonProperty("entityId")
private String entityId;
@JsonProperty("entityTypeCode")
private String entityTypeCode;
@JsonProperty("entityType")
@Valid
private EntityType entityType;
@JsonProperty("addresses")
@Valid
private Addresses addresses;
@JsonProperty("emailAddresses")
@Valid
private EmailAddresses emailAddresses;
@JsonProperty("phoneNumbers")
@Valid
private PhoneNumbers phoneNumbers;
@JsonProperty("defaultAddress")
@Valid
private DefaultAddress defaultAddress;
@JsonProperty("defaultEmailAddress")
@Valid
private DefaultEmailAddress defaultEmailAddress;
@JsonProperty("defaultPhoneNumber")
@Valid
private DefaultPhoneNumber defaultPhoneNumber;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("active")
private boolean active;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -8651076258473154935L;

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public EntityTypeContactInfo withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("entityTypeCode")
public String getEntityTypeCode() {
return entityTypeCode;
}

@JsonProperty("entityTypeCode")
public void setEntityTypeCode(String entityTypeCode) {
this.entityTypeCode = entityTypeCode;
}

public EntityTypeContactInfo withEntityTypeCode(String entityTypeCode) {
this.entityTypeCode = entityTypeCode;
return this;
}

@JsonProperty("entityType")
public EntityType getEntityType() {
return entityType;
}

@JsonProperty("entityType")
public void setEntityType(EntityType entityType) {
this.entityType = entityType;
}

public EntityTypeContactInfo withEntityType(EntityType entityType) {
this.entityType = entityType;
return this;
}

@JsonProperty("addresses")
public Addresses getAddresses() {
return addresses;
}

@JsonProperty("addresses")
public void setAddresses(Addresses addresses) {
this.addresses = addresses;
}

public EntityTypeContactInfo withAddresses(Addresses addresses) {
this.addresses = addresses;
return this;
}

@JsonProperty("emailAddresses")
public EmailAddresses getEmailAddresses() {
return emailAddresses;
}

@JsonProperty("emailAddresses")
public void setEmailAddresses(EmailAddresses emailAddresses) {
this.emailAddresses = emailAddresses;
}

public EntityTypeContactInfo withEmailAddresses(EmailAddresses emailAddresses) {
this.emailAddresses = emailAddresses;
return this;
}

@JsonProperty("phoneNumbers")
public PhoneNumbers getPhoneNumbers() {
return phoneNumbers;
}

@JsonProperty("phoneNumbers")
public void setPhoneNumbers(PhoneNumbers phoneNumbers) {
this.phoneNumbers = phoneNumbers;
}

public EntityTypeContactInfo withPhoneNumbers(PhoneNumbers phoneNumbers) {
this.phoneNumbers = phoneNumbers;
return this;
}

@JsonProperty("defaultAddress")
public DefaultAddress getDefaultAddress() {
return defaultAddress;
}

@JsonProperty("defaultAddress")
public void setDefaultAddress(DefaultAddress defaultAddress) {
this.defaultAddress = defaultAddress;
}

public EntityTypeContactInfo withDefaultAddress(DefaultAddress defaultAddress) {
this.defaultAddress = defaultAddress;
return this;
}

@JsonProperty("defaultEmailAddress")
public DefaultEmailAddress getDefaultEmailAddress() {
return defaultEmailAddress;
}

@JsonProperty("defaultEmailAddress")
public void setDefaultEmailAddress(DefaultEmailAddress defaultEmailAddress) {
this.defaultEmailAddress = defaultEmailAddress;
}

public EntityTypeContactInfo withDefaultEmailAddress(DefaultEmailAddress defaultEmailAddress) {
this.defaultEmailAddress = defaultEmailAddress;
return this;
}

@JsonProperty("defaultPhoneNumber")
public DefaultPhoneNumber getDefaultPhoneNumber() {
return defaultPhoneNumber;
}

@JsonProperty("defaultPhoneNumber")
public void setDefaultPhoneNumber(DefaultPhoneNumber defaultPhoneNumber) {
this.defaultPhoneNumber = defaultPhoneNumber;
}

public EntityTypeContactInfo withDefaultPhoneNumber(DefaultPhoneNumber defaultPhoneNumber) {
this.defaultPhoneNumber = defaultPhoneNumber;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public EntityTypeContactInfo withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public EntityTypeContactInfo withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public EntityTypeContactInfo withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public EntityTypeContactInfo withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public EntityTypeContactInfo withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("entityId", entityId).append("entityTypeCode", entityTypeCode).append("entityType", entityType).append("addresses", addresses).append("emailAddresses", emailAddresses).append("phoneNumbers", phoneNumbers).append("defaultAddress", defaultAddress).append("defaultEmailAddress", defaultEmailAddress).append("defaultPhoneNumber", defaultPhoneNumber).append("versionNumber", versionNumber).append("objectId", objectId).append("active", active).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(defaultPhoneNumber).append(entityTypeCode).append(entityId).append(phoneNumbers).append(entityType).append(defaultEmailAddress).append(additionalProperties).append(objectId).append(any).append(defaultAddress).append(active).append(addresses).append(versionNumber).append(emailAddresses).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof EntityTypeContactInfo) == false) {
return false;
}
EntityTypeContactInfo rhs = ((EntityTypeContactInfo) other);
return new EqualsBuilder().append(defaultPhoneNumber, rhs.defaultPhoneNumber).append(entityTypeCode, rhs.entityTypeCode).append(entityId, rhs.entityId).append(phoneNumbers, rhs.phoneNumbers).append(entityType, rhs.entityType).append(defaultEmailAddress, rhs.defaultEmailAddress).append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(defaultAddress, rhs.defaultAddress).append(active, rhs.active).append(addresses, rhs.addresses).append(versionNumber, rhs.versionNumber).append(emailAddresses, rhs.emailAddresses).isEquals();
}

}
-----------------------------------edu.bu.identityApi.EntityTypeContactInfos.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"entityTypeContactInfo"
})
public class EntityTypeContactInfos implements Serializable
{

@JsonProperty("entityTypeContactInfo")
@Valid
private List<EntityTypeContactInfo> entityTypeContactInfo = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 2782096586200596296L;

@JsonProperty("entityTypeContactInfo")
public List<EntityTypeContactInfo> getEntityTypeContactInfo() {
return entityTypeContactInfo;
}

@JsonProperty("entityTypeContactInfo")
public void setEntityTypeContactInfo(List<EntityTypeContactInfo> entityTypeContactInfo) {
this.entityTypeContactInfo = entityTypeContactInfo;
}

public EntityTypeContactInfos withEntityTypeContactInfo(List<EntityTypeContactInfo> entityTypeContactInfo) {
this.entityTypeContactInfo = entityTypeContactInfo;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public EntityTypeContactInfos withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("entityTypeContactInfo", entityTypeContactInfo).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(entityTypeContactInfo).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof EntityTypeContactInfos) == false) {
return false;
}
EntityTypeContactInfos rhs = ((EntityTypeContactInfos) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(entityTypeContactInfo, rhs.entityTypeContactInfo).isEquals();
}

}
-----------------------------------edu.bu.identityApi.Ethnicities.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"ethnicity"
})
public class Ethnicities implements Serializable
{

@JsonProperty("ethnicity")
@Valid
private List<Object> ethnicity = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -1277933642392074542L;

@JsonProperty("ethnicity")
public List<Object> getEthnicity() {
return ethnicity;
}

@JsonProperty("ethnicity")
public void setEthnicity(List<Object> ethnicity) {
this.ethnicity = ethnicity;
}

public Ethnicities withEthnicity(List<Object> ethnicity) {
this.ethnicity = ethnicity;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public Ethnicities withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("ethnicity", ethnicity).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(ethnicity).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof Ethnicities) == false) {
return false;
}
Ethnicities rhs = ((Ethnicities) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(ethnicity, rhs.ethnicity).isEquals();
}

}
-----------------------------------edu.bu.identityApi.ExternalIdentifiers.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"externalIdentifier"
})
public class ExternalIdentifiers implements Serializable
{

@JsonProperty("externalIdentifier")
@Valid
private List<Object> externalIdentifier = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -4317028337544013536L;

@JsonProperty("externalIdentifier")
public List<Object> getExternalIdentifier() {
return externalIdentifier;
}

@JsonProperty("externalIdentifier")
public void setExternalIdentifier(List<Object> externalIdentifier) {
this.externalIdentifier = externalIdentifier;
}

public ExternalIdentifiers withExternalIdentifier(List<Object> externalIdentifier) {
this.externalIdentifier = externalIdentifier;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public ExternalIdentifiers withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("externalIdentifier", externalIdentifier).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(externalIdentifier).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof ExternalIdentifiers) == false) {
return false;
}
ExternalIdentifiers rhs = ((ExternalIdentifiers) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(externalIdentifier, rhs.externalIdentifier).isEquals();
}

}
-----------------------------------edu.bu.identityApi.IdentityService.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"entity"
})
public class IdentityService implements Serializable
{

@JsonProperty("entity")
@Valid
private Entity entity;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 9131891090871394258L;

@JsonProperty("entity")
public Entity getEntity() {
return entity;
}

@JsonProperty("entity")
public void setEntity(Entity entity) {
this.entity = entity;
}

public IdentityService withEntity(Entity entity) {
this.entity = entity;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public IdentityService withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("entity", entity).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(entity).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof IdentityService) == false) {
return false;
}
IdentityService rhs = ((IdentityService) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(entity, rhs.entity).isEquals();
}

}
-----------------------------------edu.bu.identityApi.Name.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"id",
"entityId",
"nameType",
"namePrefix",
"nameTitle",
"firstName",
"middleName",
"lastName",
"nameSuffix",
"compositeName",
"namePrefixUnmasked",
"nameTitleUnmasked",
"firstNameUnmasked",
"middleNameUnmasked",
"lastNameUnmasked",
"nameSuffixUnmasked",
"compositeNameUnmasked",
"noteMessage",
"nameChangedDate",
"suppressName",
"defaultValue",
"active",
"versionNumber",
"objectId",
"any"
})
public class Name implements Serializable
{

@JsonProperty("id")
private String id;
@JsonProperty("entityId")
private String entityId;
@JsonProperty("nameType")
@Valid
private NameType nameType;
@JsonProperty("namePrefix")
private Object namePrefix;
@JsonProperty("nameTitle")
private Object nameTitle;
@JsonProperty("firstName")
private String firstName;
@JsonProperty("middleName")
private Object middleName;
@JsonProperty("lastName")
private String lastName;
@JsonProperty("nameSuffix")
private Object nameSuffix;
@JsonProperty("compositeName")
private String compositeName;
@JsonProperty("namePrefixUnmasked")
private Object namePrefixUnmasked;
@JsonProperty("nameTitleUnmasked")
private Object nameTitleUnmasked;
@JsonProperty("firstNameUnmasked")
private String firstNameUnmasked;
@JsonProperty("middleNameUnmasked")
private Object middleNameUnmasked;
@JsonProperty("lastNameUnmasked")
private String lastNameUnmasked;
@JsonProperty("nameSuffixUnmasked")
private Object nameSuffixUnmasked;
@JsonProperty("compositeNameUnmasked")
private String compositeNameUnmasked;
@JsonProperty("noteMessage")
private Object noteMessage;
@JsonProperty("nameChangedDate")
private Object nameChangedDate;
@JsonProperty("suppressName")
private boolean suppressName;
@JsonProperty("defaultValue")
private boolean defaultValue;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -563048036885272566L;

@JsonProperty("id")
public String getId() {
return id;
}

@JsonProperty("id")
public void setId(String id) {
this.id = id;
}

public Name withId(String id) {
this.id = id;
return this;
}

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public Name withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("nameType")
public NameType getNameType() {
return nameType;
}

@JsonProperty("nameType")
public void setNameType(NameType nameType) {
this.nameType = nameType;
}

public Name withNameType(NameType nameType) {
this.nameType = nameType;
return this;
}

@JsonProperty("namePrefix")
public Object getNamePrefix() {
return namePrefix;
}

@JsonProperty("namePrefix")
public void setNamePrefix(Object namePrefix) {
this.namePrefix = namePrefix;
}

public Name withNamePrefix(Object namePrefix) {
this.namePrefix = namePrefix;
return this;
}

@JsonProperty("nameTitle")
public Object getNameTitle() {
return nameTitle;
}

@JsonProperty("nameTitle")
public void setNameTitle(Object nameTitle) {
this.nameTitle = nameTitle;
}

public Name withNameTitle(Object nameTitle) {
this.nameTitle = nameTitle;
return this;
}

@JsonProperty("firstName")
public String getFirstName() {
return firstName;
}

@JsonProperty("firstName")
public void setFirstName(String firstName) {
this.firstName = firstName;
}

public Name withFirstName(String firstName) {
this.firstName = firstName;
return this;
}

@JsonProperty("middleName")
public Object getMiddleName() {
return middleName;
}

@JsonProperty("middleName")
public void setMiddleName(Object middleName) {
this.middleName = middleName;
}

public Name withMiddleName(Object middleName) {
this.middleName = middleName;
return this;
}

@JsonProperty("lastName")
public String getLastName() {
return lastName;
}

@JsonProperty("lastName")
public void setLastName(String lastName) {
this.lastName = lastName;
}

public Name withLastName(String lastName) {
this.lastName = lastName;
return this;
}

@JsonProperty("nameSuffix")
public Object getNameSuffix() {
return nameSuffix;
}

@JsonProperty("nameSuffix")
public void setNameSuffix(Object nameSuffix) {
this.nameSuffix = nameSuffix;
}

public Name withNameSuffix(Object nameSuffix) {
this.nameSuffix = nameSuffix;
return this;
}

@JsonProperty("compositeName")
public String getCompositeName() {
return compositeName;
}

@JsonProperty("compositeName")
public void setCompositeName(String compositeName) {
this.compositeName = compositeName;
}

public Name withCompositeName(String compositeName) {
this.compositeName = compositeName;
return this;
}

@JsonProperty("namePrefixUnmasked")
public Object getNamePrefixUnmasked() {
return namePrefixUnmasked;
}

@JsonProperty("namePrefixUnmasked")
public void setNamePrefixUnmasked(Object namePrefixUnmasked) {
this.namePrefixUnmasked = namePrefixUnmasked;
}

public Name withNamePrefixUnmasked(Object namePrefixUnmasked) {
this.namePrefixUnmasked = namePrefixUnmasked;
return this;
}

@JsonProperty("nameTitleUnmasked")
public Object getNameTitleUnmasked() {
return nameTitleUnmasked;
}

@JsonProperty("nameTitleUnmasked")
public void setNameTitleUnmasked(Object nameTitleUnmasked) {
this.nameTitleUnmasked = nameTitleUnmasked;
}

public Name withNameTitleUnmasked(Object nameTitleUnmasked) {
this.nameTitleUnmasked = nameTitleUnmasked;
return this;
}

@JsonProperty("firstNameUnmasked")
public String getFirstNameUnmasked() {
return firstNameUnmasked;
}

@JsonProperty("firstNameUnmasked")
public void setFirstNameUnmasked(String firstNameUnmasked) {
this.firstNameUnmasked = firstNameUnmasked;
}

public Name withFirstNameUnmasked(String firstNameUnmasked) {
this.firstNameUnmasked = firstNameUnmasked;
return this;
}

@JsonProperty("middleNameUnmasked")
public Object getMiddleNameUnmasked() {
return middleNameUnmasked;
}

@JsonProperty("middleNameUnmasked")
public void setMiddleNameUnmasked(Object middleNameUnmasked) {
this.middleNameUnmasked = middleNameUnmasked;
}

public Name withMiddleNameUnmasked(Object middleNameUnmasked) {
this.middleNameUnmasked = middleNameUnmasked;
return this;
}

@JsonProperty("lastNameUnmasked")
public String getLastNameUnmasked() {
return lastNameUnmasked;
}

@JsonProperty("lastNameUnmasked")
public void setLastNameUnmasked(String lastNameUnmasked) {
this.lastNameUnmasked = lastNameUnmasked;
}

public Name withLastNameUnmasked(String lastNameUnmasked) {
this.lastNameUnmasked = lastNameUnmasked;
return this;
}

@JsonProperty("nameSuffixUnmasked")
public Object getNameSuffixUnmasked() {
return nameSuffixUnmasked;
}

@JsonProperty("nameSuffixUnmasked")
public void setNameSuffixUnmasked(Object nameSuffixUnmasked) {
this.nameSuffixUnmasked = nameSuffixUnmasked;
}

public Name withNameSuffixUnmasked(Object nameSuffixUnmasked) {
this.nameSuffixUnmasked = nameSuffixUnmasked;
return this;
}

@JsonProperty("compositeNameUnmasked")
public String getCompositeNameUnmasked() {
return compositeNameUnmasked;
}

@JsonProperty("compositeNameUnmasked")
public void setCompositeNameUnmasked(String compositeNameUnmasked) {
this.compositeNameUnmasked = compositeNameUnmasked;
}

public Name withCompositeNameUnmasked(String compositeNameUnmasked) {
this.compositeNameUnmasked = compositeNameUnmasked;
return this;
}

@JsonProperty("noteMessage")
public Object getNoteMessage() {
return noteMessage;
}

@JsonProperty("noteMessage")
public void setNoteMessage(Object noteMessage) {
this.noteMessage = noteMessage;
}

public Name withNoteMessage(Object noteMessage) {
this.noteMessage = noteMessage;
return this;
}

@JsonProperty("nameChangedDate")
public Object getNameChangedDate() {
return nameChangedDate;
}

@JsonProperty("nameChangedDate")
public void setNameChangedDate(Object nameChangedDate) {
this.nameChangedDate = nameChangedDate;
}

public Name withNameChangedDate(Object nameChangedDate) {
this.nameChangedDate = nameChangedDate;
return this;
}

@JsonProperty("suppressName")
public boolean isSuppressName() {
return suppressName;
}

@JsonProperty("suppressName")
public void setSuppressName(boolean suppressName) {
this.suppressName = suppressName;
}

public Name withSuppressName(boolean suppressName) {
this.suppressName = suppressName;
return this;
}

@JsonProperty("defaultValue")
public boolean isDefaultValue() {
return defaultValue;
}

@JsonProperty("defaultValue")
public void setDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
}

public Name withDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public Name withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public Name withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public Name withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public Name withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public Name withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("id", id).append("entityId", entityId).append("nameType", nameType).append("namePrefix", namePrefix).append("nameTitle", nameTitle).append("firstName", firstName).append("middleName", middleName).append("lastName", lastName).append("nameSuffix", nameSuffix).append("compositeName", compositeName).append("namePrefixUnmasked", namePrefixUnmasked).append("nameTitleUnmasked", nameTitleUnmasked).append("firstNameUnmasked", firstNameUnmasked).append("middleNameUnmasked", middleNameUnmasked).append("lastNameUnmasked", lastNameUnmasked).append("nameSuffixUnmasked", nameSuffixUnmasked).append("compositeNameUnmasked", compositeNameUnmasked).append("noteMessage", noteMessage).append("nameChangedDate", nameChangedDate).append("suppressName", suppressName).append("defaultValue", defaultValue).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(nameSuffix).append(nameTitle).append(entityId).append(nameType).append(id).append(suppressName).append(objectId).append(any).append(nameChangedDate).append(namePrefixUnmasked).append(compositeNameUnmasked).append(defaultValue).append(firstName).append(namePrefix).append(nameTitleUnmasked).append(middleName).append(lastName).append(compositeName).append(lastNameUnmasked).append(noteMessage).append(additionalProperties).append(middleNameUnmasked).append(nameSuffixUnmasked).append(active).append(firstNameUnmasked).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof Name) == false) {
return false;
}
Name rhs = ((Name) other);
return new EqualsBuilder().append(nameSuffix, rhs.nameSuffix).append(nameTitle, rhs.nameTitle).append(entityId, rhs.entityId).append(nameType, rhs.nameType).append(id, rhs.id).append(suppressName, rhs.suppressName).append(objectId, rhs.objectId).append(any, rhs.any).append(nameChangedDate, rhs.nameChangedDate).append(namePrefixUnmasked, rhs.namePrefixUnmasked).append(compositeNameUnmasked, rhs.compositeNameUnmasked).append(defaultValue, rhs.defaultValue).append(firstName, rhs.firstName).append(namePrefix, rhs.namePrefix).append(nameTitleUnmasked, rhs.nameTitleUnmasked).append(middleName, rhs.middleName).append(lastName, rhs.lastName).append(compositeName, rhs.compositeName).append(lastNameUnmasked, rhs.lastNameUnmasked).append(noteMessage, rhs.noteMessage).append(additionalProperties, rhs.additionalProperties).append(middleNameUnmasked, rhs.middleNameUnmasked).append(nameSuffixUnmasked, rhs.nameSuffixUnmasked).append(active, rhs.active).append(firstNameUnmasked, rhs.firstNameUnmasked).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.NameType.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"versionNumber",
"objectId",
"any"
})
public class NameType implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private String sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -7130461352355296097L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public NameType withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public NameType withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public String getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(String sortCode) {
this.sortCode = sortCode;
}

public NameType withSortCode(String sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public NameType withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public NameType withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public NameType withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public NameType withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public NameType withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof NameType) == false) {
return false;
}
NameType rhs = ((NameType) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.NameType_.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"versionNumber",
"objectId",
"any"
})
public class NameType_ implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private String sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 9069999874052031559L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public NameType_ withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public NameType_ withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public String getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(String sortCode) {
this.sortCode = sortCode;
}

public NameType_ withSortCode(String sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public NameType_ withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public NameType_ withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public NameType_ withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public NameType_ withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public NameType_ withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof NameType_) == false) {
return false;
}
NameType_ rhs = ((NameType_) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.Names.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"name"
})
public class Names implements Serializable
{

@JsonProperty("name")
@Valid
private List<Name> name = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 4026776578791753537L;

@JsonProperty("name")
public List<Name> getName() {
return name;
}

@JsonProperty("name")
public void setName(List<Name> name) {
this.name = name;
}

public Names withName(List<Name> name) {
this.name = name;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public Names withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("name", name).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(name).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof Names) == false) {
return false;
}
Names rhs = ((Names) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(name, rhs.name).isEquals();
}

}
-----------------------------------edu.bu.identityApi.PhoneNumber.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"id",
"entityTypeCode",
"entityId",
"phoneType",
"countryCode",
"phoneNumber",
"extensionNumber",
"formattedPhoneNumber",
"countryCodeUnmasked",
"phoneNumberUnmasked",
"extensionNumberUnmasked",
"formattedPhoneNumberUnmasked",
"suppressPhone",
"defaultValue",
"active",
"versionNumber",
"objectId",
"any"
})
public class PhoneNumber implements Serializable
{

@JsonProperty("id")
private String id;
@JsonProperty("entityTypeCode")
private String entityTypeCode;
@JsonProperty("entityId")
private String entityId;
@JsonProperty("phoneType")
@Valid
private PhoneType phoneType;
@JsonProperty("countryCode")
private Object countryCode;
@JsonProperty("phoneNumber")
private String phoneNumber;
@JsonProperty("extensionNumber")
private Object extensionNumber;
@JsonProperty("formattedPhoneNumber")
private String formattedPhoneNumber;
@JsonProperty("countryCodeUnmasked")
private Object countryCodeUnmasked;
@JsonProperty("phoneNumberUnmasked")
private String phoneNumberUnmasked;
@JsonProperty("extensionNumberUnmasked")
private Object extensionNumberUnmasked;
@JsonProperty("formattedPhoneNumberUnmasked")
private String formattedPhoneNumberUnmasked;
@JsonProperty("suppressPhone")
private boolean suppressPhone;
@JsonProperty("defaultValue")
private boolean defaultValue;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -4304553883141607251L;

@JsonProperty("id")
public String getId() {
return id;
}

@JsonProperty("id")
public void setId(String id) {
this.id = id;
}

public PhoneNumber withId(String id) {
this.id = id;
return this;
}

@JsonProperty("entityTypeCode")
public String getEntityTypeCode() {
return entityTypeCode;
}

@JsonProperty("entityTypeCode")
public void setEntityTypeCode(String entityTypeCode) {
this.entityTypeCode = entityTypeCode;
}

public PhoneNumber withEntityTypeCode(String entityTypeCode) {
this.entityTypeCode = entityTypeCode;
return this;
}

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public PhoneNumber withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("phoneType")
public PhoneType getPhoneType() {
return phoneType;
}

@JsonProperty("phoneType")
public void setPhoneType(PhoneType phoneType) {
this.phoneType = phoneType;
}

public PhoneNumber withPhoneType(PhoneType phoneType) {
this.phoneType = phoneType;
return this;
}

@JsonProperty("countryCode")
public Object getCountryCode() {
return countryCode;
}

@JsonProperty("countryCode")
public void setCountryCode(Object countryCode) {
this.countryCode = countryCode;
}

public PhoneNumber withCountryCode(Object countryCode) {
this.countryCode = countryCode;
return this;
}

@JsonProperty("phoneNumber")
public String getPhoneNumber() {
return phoneNumber;
}

@JsonProperty("phoneNumber")
public void setPhoneNumber(String phoneNumber) {
this.phoneNumber = phoneNumber;
}

public PhoneNumber withPhoneNumber(String phoneNumber) {
this.phoneNumber = phoneNumber;
return this;
}

@JsonProperty("extensionNumber")
public Object getExtensionNumber() {
return extensionNumber;
}

@JsonProperty("extensionNumber")
public void setExtensionNumber(Object extensionNumber) {
this.extensionNumber = extensionNumber;
}

public PhoneNumber withExtensionNumber(Object extensionNumber) {
this.extensionNumber = extensionNumber;
return this;
}

@JsonProperty("formattedPhoneNumber")
public String getFormattedPhoneNumber() {
return formattedPhoneNumber;
}

@JsonProperty("formattedPhoneNumber")
public void setFormattedPhoneNumber(String formattedPhoneNumber) {
this.formattedPhoneNumber = formattedPhoneNumber;
}

public PhoneNumber withFormattedPhoneNumber(String formattedPhoneNumber) {
this.formattedPhoneNumber = formattedPhoneNumber;
return this;
}

@JsonProperty("countryCodeUnmasked")
public Object getCountryCodeUnmasked() {
return countryCodeUnmasked;
}

@JsonProperty("countryCodeUnmasked")
public void setCountryCodeUnmasked(Object countryCodeUnmasked) {
this.countryCodeUnmasked = countryCodeUnmasked;
}

public PhoneNumber withCountryCodeUnmasked(Object countryCodeUnmasked) {
this.countryCodeUnmasked = countryCodeUnmasked;
return this;
}

@JsonProperty("phoneNumberUnmasked")
public String getPhoneNumberUnmasked() {
return phoneNumberUnmasked;
}

@JsonProperty("phoneNumberUnmasked")
public void setPhoneNumberUnmasked(String phoneNumberUnmasked) {
this.phoneNumberUnmasked = phoneNumberUnmasked;
}

public PhoneNumber withPhoneNumberUnmasked(String phoneNumberUnmasked) {
this.phoneNumberUnmasked = phoneNumberUnmasked;
return this;
}

@JsonProperty("extensionNumberUnmasked")
public Object getExtensionNumberUnmasked() {
return extensionNumberUnmasked;
}

@JsonProperty("extensionNumberUnmasked")
public void setExtensionNumberUnmasked(Object extensionNumberUnmasked) {
this.extensionNumberUnmasked = extensionNumberUnmasked;
}

public PhoneNumber withExtensionNumberUnmasked(Object extensionNumberUnmasked) {
this.extensionNumberUnmasked = extensionNumberUnmasked;
return this;
}

@JsonProperty("formattedPhoneNumberUnmasked")
public String getFormattedPhoneNumberUnmasked() {
return formattedPhoneNumberUnmasked;
}

@JsonProperty("formattedPhoneNumberUnmasked")
public void setFormattedPhoneNumberUnmasked(String formattedPhoneNumberUnmasked) {
this.formattedPhoneNumberUnmasked = formattedPhoneNumberUnmasked;
}

public PhoneNumber withFormattedPhoneNumberUnmasked(String formattedPhoneNumberUnmasked) {
this.formattedPhoneNumberUnmasked = formattedPhoneNumberUnmasked;
return this;
}

@JsonProperty("suppressPhone")
public boolean isSuppressPhone() {
return suppressPhone;
}

@JsonProperty("suppressPhone")
public void setSuppressPhone(boolean suppressPhone) {
this.suppressPhone = suppressPhone;
}

public PhoneNumber withSuppressPhone(boolean suppressPhone) {
this.suppressPhone = suppressPhone;
return this;
}

@JsonProperty("defaultValue")
public boolean isDefaultValue() {
return defaultValue;
}

@JsonProperty("defaultValue")
public void setDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
}

public PhoneNumber withDefaultValue(boolean defaultValue) {
this.defaultValue = defaultValue;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public PhoneNumber withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public PhoneNumber withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public PhoneNumber withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public PhoneNumber withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public PhoneNumber withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("id", id).append("entityTypeCode", entityTypeCode).append("entityId", entityId).append("phoneType", phoneType).append("countryCode", countryCode).append("phoneNumber", phoneNumber).append("extensionNumber", extensionNumber).append("formattedPhoneNumber", formattedPhoneNumber).append("countryCodeUnmasked", countryCodeUnmasked).append("phoneNumberUnmasked", phoneNumberUnmasked).append("extensionNumberUnmasked", extensionNumberUnmasked).append("formattedPhoneNumberUnmasked", formattedPhoneNumberUnmasked).append("suppressPhone", suppressPhone).append("defaultValue", defaultValue).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(formattedPhoneNumberUnmasked).append(suppressPhone).append(phoneNumberUnmasked).append(phoneType).append(entityTypeCode).append(extensionNumberUnmasked).append(countryCode).append(entityId).append(id).append(phoneNumber).append(formattedPhoneNumber).append(additionalProperties).append(objectId).append(any).append(active).append(countryCodeUnmasked).append(defaultValue).append(extensionNumber).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof PhoneNumber) == false) {
return false;
}
PhoneNumber rhs = ((PhoneNumber) other);
return new EqualsBuilder().append(formattedPhoneNumberUnmasked, rhs.formattedPhoneNumberUnmasked).append(suppressPhone, rhs.suppressPhone).append(phoneNumberUnmasked, rhs.phoneNumberUnmasked).append(phoneType, rhs.phoneType).append(entityTypeCode, rhs.entityTypeCode).append(extensionNumberUnmasked, rhs.extensionNumberUnmasked).append(countryCode, rhs.countryCode).append(entityId, rhs.entityId).append(id, rhs.id).append(phoneNumber, rhs.phoneNumber).append(formattedPhoneNumber, rhs.formattedPhoneNumber).append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(active, rhs.active).append(countryCodeUnmasked, rhs.countryCodeUnmasked).append(defaultValue, rhs.defaultValue).append(extensionNumber, rhs.extensionNumber).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.PhoneNumbers.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"phoneNumber"
})
public class PhoneNumbers implements Serializable
{

@JsonProperty("phoneNumber")
@Valid
private List<PhoneNumber> phoneNumber = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 6976327673207372757L;

@JsonProperty("phoneNumber")
public List<PhoneNumber> getPhoneNumber() {
return phoneNumber;
}

@JsonProperty("phoneNumber")
public void setPhoneNumber(List<PhoneNumber> phoneNumber) {
this.phoneNumber = phoneNumber;
}

public PhoneNumbers withPhoneNumber(List<PhoneNumber> phoneNumber) {
this.phoneNumber = phoneNumber;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public PhoneNumbers withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("phoneNumber", phoneNumber).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(phoneNumber).append(additionalProperties).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof PhoneNumbers) == false) {
return false;
}
PhoneNumbers rhs = ((PhoneNumbers) other);
return new EqualsBuilder().append(phoneNumber, rhs.phoneNumber).append(additionalProperties, rhs.additionalProperties).isEquals();
}

}
-----------------------------------edu.bu.identityApi.PhoneType.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"versionNumber",
"objectId",
"any"
})
public class PhoneType implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private String sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 7147835660370416911L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public PhoneType withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public PhoneType withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public String getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(String sortCode) {
this.sortCode = sortCode;
}

public PhoneType withSortCode(String sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public PhoneType withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public PhoneType withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public PhoneType withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public PhoneType withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public PhoneType withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof PhoneType) == false) {
return false;
}
PhoneType rhs = ((PhoneType) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.PhoneType_.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"code",
"name",
"sortCode",
"active",
"versionNumber",
"objectId",
"any"
})
public class PhoneType_ implements Serializable
{

@JsonProperty("code")
private String code;
@JsonProperty("name")
private String name;
@JsonProperty("sortCode")
private String sortCode;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 7580782833547295550L;

@JsonProperty("code")
public String getCode() {
return code;
}

@JsonProperty("code")
public void setCode(String code) {
this.code = code;
}

public PhoneType_ withCode(String code) {
this.code = code;
return this;
}

@JsonProperty("name")
public String getName() {
return name;
}

@JsonProperty("name")
public void setName(String name) {
this.name = name;
}

public PhoneType_ withName(String name) {
this.name = name;
return this;
}

@JsonProperty("sortCode")
public String getSortCode() {
return sortCode;
}

@JsonProperty("sortCode")
public void setSortCode(String sortCode) {
this.sortCode = sortCode;
}

public PhoneType_ withSortCode(String sortCode) {
this.sortCode = sortCode;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public PhoneType_ withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public PhoneType_ withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public PhoneType_ withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public PhoneType_ withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public PhoneType_ withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("code", code).append("name", name).append("sortCode", sortCode).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(objectId).append(any).append(name).append(sortCode).append(active).append(code).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof PhoneType_) == false) {
return false;
}
PhoneType_ rhs = ((PhoneType_) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(name, rhs.name).append(sortCode, rhs.sortCode).append(active, rhs.active).append(code, rhs.code).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.PrimaryEmployment.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"id",
"entityId",
"employeeId",
"employmentRecordId",
"entityAffiliation",
"employeeStatus",
"employeeType",
"primaryDepartmentCode",
"baseSalaryAmount",
"primary",
"versionNumber",
"objectId",
"active",
"any"
})
public class PrimaryEmployment implements Serializable
{

@JsonProperty("id")
private String id;
@JsonProperty("entityId")
private String entityId;
@JsonProperty("employeeId")
private String employeeId;
@JsonProperty("employmentRecordId")
private String employmentRecordId;
@JsonProperty("entityAffiliation")
@Valid
private EntityAffiliation_ entityAffiliation;
@JsonProperty("employeeStatus")
@Valid
private EmployeeStatus_ employeeStatus;
@JsonProperty("employeeType")
@Valid
private EmployeeType_ employeeType;
@JsonProperty("primaryDepartmentCode")
private String primaryDepartmentCode;
@JsonProperty("baseSalaryAmount")
private String baseSalaryAmount;
@JsonProperty("primary")
private boolean primary;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("active")
private boolean active;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -3345387285366181985L;

@JsonProperty("id")
public String getId() {
return id;
}

@JsonProperty("id")
public void setId(String id) {
this.id = id;
}

public PrimaryEmployment withId(String id) {
this.id = id;
return this;
}

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public PrimaryEmployment withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("employeeId")
public String getEmployeeId() {
return employeeId;
}

@JsonProperty("employeeId")
public void setEmployeeId(String employeeId) {
this.employeeId = employeeId;
}

public PrimaryEmployment withEmployeeId(String employeeId) {
this.employeeId = employeeId;
return this;
}

@JsonProperty("employmentRecordId")
public String getEmploymentRecordId() {
return employmentRecordId;
}

@JsonProperty("employmentRecordId")
public void setEmploymentRecordId(String employmentRecordId) {
this.employmentRecordId = employmentRecordId;
}

public PrimaryEmployment withEmploymentRecordId(String employmentRecordId) {
this.employmentRecordId = employmentRecordId;
return this;
}

@JsonProperty("entityAffiliation")
public EntityAffiliation_ getEntityAffiliation() {
return entityAffiliation;
}

@JsonProperty("entityAffiliation")
public void setEntityAffiliation(EntityAffiliation_ entityAffiliation) {
this.entityAffiliation = entityAffiliation;
}

public PrimaryEmployment withEntityAffiliation(EntityAffiliation_ entityAffiliation) {
this.entityAffiliation = entityAffiliation;
return this;
}

@JsonProperty("employeeStatus")
public EmployeeStatus_ getEmployeeStatus() {
return employeeStatus;
}

@JsonProperty("employeeStatus")
public void setEmployeeStatus(EmployeeStatus_ employeeStatus) {
this.employeeStatus = employeeStatus;
}

public PrimaryEmployment withEmployeeStatus(EmployeeStatus_ employeeStatus) {
this.employeeStatus = employeeStatus;
return this;
}

@JsonProperty("employeeType")
public EmployeeType_ getEmployeeType() {
return employeeType;
}

@JsonProperty("employeeType")
public void setEmployeeType(EmployeeType_ employeeType) {
this.employeeType = employeeType;
}

public PrimaryEmployment withEmployeeType(EmployeeType_ employeeType) {
this.employeeType = employeeType;
return this;
}

@JsonProperty("primaryDepartmentCode")
public String getPrimaryDepartmentCode() {
return primaryDepartmentCode;
}

@JsonProperty("primaryDepartmentCode")
public void setPrimaryDepartmentCode(String primaryDepartmentCode) {
this.primaryDepartmentCode = primaryDepartmentCode;
}

public PrimaryEmployment withPrimaryDepartmentCode(String primaryDepartmentCode) {
this.primaryDepartmentCode = primaryDepartmentCode;
return this;
}

@JsonProperty("baseSalaryAmount")
public String getBaseSalaryAmount() {
return baseSalaryAmount;
}

@JsonProperty("baseSalaryAmount")
public void setBaseSalaryAmount(String baseSalaryAmount) {
this.baseSalaryAmount = baseSalaryAmount;
}

public PrimaryEmployment withBaseSalaryAmount(String baseSalaryAmount) {
this.baseSalaryAmount = baseSalaryAmount;
return this;
}

@JsonProperty("primary")
public boolean isPrimary() {
return primary;
}

@JsonProperty("primary")
public void setPrimary(boolean primary) {
this.primary = primary;
}

public PrimaryEmployment withPrimary(boolean primary) {
this.primary = primary;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public PrimaryEmployment withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public PrimaryEmployment withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public PrimaryEmployment withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public PrimaryEmployment withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public PrimaryEmployment withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("id", id).append("entityId", entityId).append("employeeId", employeeId).append("employmentRecordId", employmentRecordId).append("entityAffiliation", entityAffiliation).append("employeeStatus", employeeStatus).append("employeeType", employeeType).append("primaryDepartmentCode", primaryDepartmentCode).append("baseSalaryAmount", baseSalaryAmount).append("primary", primary).append("versionNumber", versionNumber).append("objectId", objectId).append("active", active).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(employeeType).append(employeeId).append(baseSalaryAmount).append(primaryDepartmentCode).append(entityId).append(employeeStatus).append(entityAffiliation).append(id).append(employmentRecordId).append(additionalProperties).append(objectId).append(any).append(primary).append(active).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof PrimaryEmployment) == false) {
return false;
}
PrimaryEmployment rhs = ((PrimaryEmployment) other);
return new EqualsBuilder().append(employeeType, rhs.employeeType).append(employeeId, rhs.employeeId).append(baseSalaryAmount, rhs.baseSalaryAmount).append(primaryDepartmentCode, rhs.primaryDepartmentCode).append(entityId, rhs.entityId).append(employeeStatus, rhs.employeeStatus).append(entityAffiliation, rhs.entityAffiliation).append(id, rhs.id).append(employmentRecordId, rhs.employmentRecordId).append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(primary, rhs.primary).append(active, rhs.active).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.Principal.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"principalId",
"principalName",
"entityId",
"active",
"versionNumber",
"objectId",
"any"
})
public class Principal implements Serializable
{

@JsonProperty("principalId")
private String principalId;
@JsonProperty("principalName")
private String principalName;
@JsonProperty("entityId")
private String entityId;
@JsonProperty("active")
private boolean active;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 5547229715020315732L;

@JsonProperty("principalId")
public String getPrincipalId() {
return principalId;
}

@JsonProperty("principalId")
public void setPrincipalId(String principalId) {
this.principalId = principalId;
}

public Principal withPrincipalId(String principalId) {
this.principalId = principalId;
return this;
}

@JsonProperty("principalName")
public String getPrincipalName() {
return principalName;
}

@JsonProperty("principalName")
public void setPrincipalName(String principalName) {
this.principalName = principalName;
}

public Principal withPrincipalName(String principalName) {
this.principalName = principalName;
return this;
}

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public Principal withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("active")
public boolean isActive() {
return active;
}

@JsonProperty("active")
public void setActive(boolean active) {
this.active = active;
}

public Principal withActive(boolean active) {
this.active = active;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public Principal withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public Principal withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public Principal withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public Principal withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("principalId", principalId).append("principalName", principalName).append("entityId", entityId).append("active", active).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(principalName).append(principalId).append(additionalProperties).append(objectId).append(any).append(entityId).append(active).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof Principal) == false) {
return false;
}
Principal rhs = ((Principal) other);
return new EqualsBuilder().append(principalName, rhs.principalName).append(principalId, rhs.principalId).append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(any, rhs.any).append(entityId, rhs.entityId).append(active, rhs.active).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.Principals.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"principal"
})
public class Principals implements Serializable
{

@JsonProperty("principal")
@Valid
private List<Principal> principal = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -4560650097936041977L;

@JsonProperty("principal")
public List<Principal> getPrincipal() {
return principal;
}

@JsonProperty("principal")
public void setPrincipal(List<Principal> principal) {
this.principal = principal;
}

public Principals withPrincipal(List<Principal> principal) {
this.principal = principal;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public Principals withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("principal", principal).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(principal).append(additionalProperties).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof Principals) == false) {
return false;
}
Principals rhs = ((Principals) other);
return new EqualsBuilder().append(principal, rhs.principal).append(additionalProperties, rhs.additionalProperties).isEquals();
}

}
-----------------------------------edu.bu.identityApi.PrivacyPreferences.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"entityId",
"suppressName",
"suppressAddress",
"suppressEmail",
"suppressPhone",
"suppressPersonal",
"versionNumber",
"objectId",
"any"
})
public class PrivacyPreferences implements Serializable
{

@JsonProperty("entityId")
private String entityId;
@JsonProperty("suppressName")
private boolean suppressName;
@JsonProperty("suppressAddress")
private boolean suppressAddress;
@JsonProperty("suppressEmail")
private boolean suppressEmail;
@JsonProperty("suppressPhone")
private boolean suppressPhone;
@JsonProperty("suppressPersonal")
private boolean suppressPersonal;
@JsonProperty("versionNumber")
private int versionNumber;
@JsonProperty("objectId")
private String objectId;
@JsonProperty("any")
@Valid
private List<Object> any = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -6082382555698196302L;

@JsonProperty("entityId")
public String getEntityId() {
return entityId;
}

@JsonProperty("entityId")
public void setEntityId(String entityId) {
this.entityId = entityId;
}

public PrivacyPreferences withEntityId(String entityId) {
this.entityId = entityId;
return this;
}

@JsonProperty("suppressName")
public boolean isSuppressName() {
return suppressName;
}

@JsonProperty("suppressName")
public void setSuppressName(boolean suppressName) {
this.suppressName = suppressName;
}

public PrivacyPreferences withSuppressName(boolean suppressName) {
this.suppressName = suppressName;
return this;
}

@JsonProperty("suppressAddress")
public boolean isSuppressAddress() {
return suppressAddress;
}

@JsonProperty("suppressAddress")
public void setSuppressAddress(boolean suppressAddress) {
this.suppressAddress = suppressAddress;
}

public PrivacyPreferences withSuppressAddress(boolean suppressAddress) {
this.suppressAddress = suppressAddress;
return this;
}

@JsonProperty("suppressEmail")
public boolean isSuppressEmail() {
return suppressEmail;
}

@JsonProperty("suppressEmail")
public void setSuppressEmail(boolean suppressEmail) {
this.suppressEmail = suppressEmail;
}

public PrivacyPreferences withSuppressEmail(boolean suppressEmail) {
this.suppressEmail = suppressEmail;
return this;
}

@JsonProperty("suppressPhone")
public boolean isSuppressPhone() {
return suppressPhone;
}

@JsonProperty("suppressPhone")
public void setSuppressPhone(boolean suppressPhone) {
this.suppressPhone = suppressPhone;
}

public PrivacyPreferences withSuppressPhone(boolean suppressPhone) {
this.suppressPhone = suppressPhone;
return this;
}

@JsonProperty("suppressPersonal")
public boolean isSuppressPersonal() {
return suppressPersonal;
}

@JsonProperty("suppressPersonal")
public void setSuppressPersonal(boolean suppressPersonal) {
this.suppressPersonal = suppressPersonal;
}

public PrivacyPreferences withSuppressPersonal(boolean suppressPersonal) {
this.suppressPersonal = suppressPersonal;
return this;
}

@JsonProperty("versionNumber")
public int getVersionNumber() {
return versionNumber;
}

@JsonProperty("versionNumber")
public void setVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
}

public PrivacyPreferences withVersionNumber(int versionNumber) {
this.versionNumber = versionNumber;
return this;
}

@JsonProperty("objectId")
public String getObjectId() {
return objectId;
}

@JsonProperty("objectId")
public void setObjectId(String objectId) {
this.objectId = objectId;
}

public PrivacyPreferences withObjectId(String objectId) {
this.objectId = objectId;
return this;
}

@JsonProperty("any")
public List<Object> getAny() {
return any;
}

@JsonProperty("any")
public void setAny(List<Object> any) {
this.any = any;
}

public PrivacyPreferences withAny(List<Object> any) {
this.any = any;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public PrivacyPreferences withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("entityId", entityId).append("suppressName", suppressName).append("suppressAddress", suppressAddress).append("suppressEmail", suppressEmail).append("suppressPhone", suppressPhone).append("suppressPersonal", suppressPersonal).append("versionNumber", versionNumber).append("objectId", objectId).append("any", any).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(suppressPhone).append(suppressAddress).append(suppressName).append(additionalProperties).append(objectId).append(suppressPersonal).append(any).append(suppressEmail).append(entityId).append(versionNumber).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof PrivacyPreferences) == false) {
return false;
}
PrivacyPreferences rhs = ((PrivacyPreferences) other);
return new EqualsBuilder().append(suppressPhone, rhs.suppressPhone).append(suppressAddress, rhs.suppressAddress).append(suppressName, rhs.suppressName).append(additionalProperties, rhs.additionalProperties).append(objectId, rhs.objectId).append(suppressPersonal, rhs.suppressPersonal).append(any, rhs.any).append(suppressEmail, rhs.suppressEmail).append(entityId, rhs.entityId).append(versionNumber, rhs.versionNumber).isEquals();
}

}
-----------------------------------edu.bu.identityApi.Residencies.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"residency"
})
public class Residencies implements Serializable
{

@JsonProperty("residency")
@Valid
private List<Object> residency = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = -959465642341462654L;

@JsonProperty("residency")
public List<Object> getResidency() {
return residency;
}

@JsonProperty("residency")
public void setResidency(List<Object> residency) {
this.residency = residency;
}

public Residencies withResidency(List<Object> residency) {
this.residency = residency;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public Residencies withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("residency", residency).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(residency).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof Residencies) == false) {
return false;
}
Residencies rhs = ((Residencies) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(residency, rhs.residency).isEquals();
}

}
-----------------------------------edu.bu.identityApi.Visas.java-----------------------------------

package edu.bu.identityApi;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"visa"
})
public class Visas implements Serializable
{

@JsonProperty("visa")
@Valid
private List<Object> visa = null;
@JsonIgnore
@Valid
private Map<String, Object> additionalProperties = new HashMap<String, Object>();
private final static long serialVersionUID = 7101193793778988449L;

@JsonProperty("visa")
public List<Object> getVisa() {
return visa;
}

@JsonProperty("visa")
public void setVisa(List<Object> visa) {
this.visa = visa;
}

public Visas withVisa(List<Object> visa) {
this.visa = visa;
return this;
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

public Visas withAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
return this;
}

@Override
public String toString() {
return new ToStringBuilder(this).append("visa", visa).append("additionalProperties", additionalProperties).toString();
}

@Override
public int hashCode() {
return new HashCodeBuilder().append(additionalProperties).append(visa).toHashCode();
}

@Override
public boolean equals(Object other) {
if (other == this) {
return true;
}
if ((other instanceof Visas) == false) {
return false;
}
Visas rhs = ((Visas) other);
return new EqualsBuilder().append(additionalProperties, rhs.additionalProperties).append(visa, rhs.visa).isEquals();
}

}
Use this tool offline: Maven plugin Gradle plugin Ant task CLI Java API
© 2012-2016 Joe Littlejohn Bugs?

