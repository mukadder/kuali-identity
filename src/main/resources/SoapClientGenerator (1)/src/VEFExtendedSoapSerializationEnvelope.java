package com.example.testSoap.wcf;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.2.8.3
//
// Created by Quasar Development 
//
//---------------------------------------------------



import org.ksoap2.SoapEnvelope;
import org.ksoap2.serialization.*;
import org.kxml2.io.KXmlParser;
import org.kxml2.kdom.Element;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserFactory;
import org.xmlpull.v1.XmlSerializer;

import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.Vector;
import java.io.StringReader;
import java.io.StringWriter;

//If you have a compilation error here then you have to add a reference to ExKsoap2.jar to your project (you can find it in Libs folder in the generated zip file)
public class VEFExtendedSoapSerializationEnvelope extends com.easywsdl.exksoap2.serialization.ExSoapSerializationEnvelope {
    static HashMap< java.lang.String,java.lang.Class> classNames = new HashMap< java.lang.String, java.lang.Class>();
    
    static {
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityAffiliationType",VEFEntityAffiliationType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^entityAffiliationTypeType",VEFentityAffiliationTypeType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^PrincipalType",VEFPrincipalType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityEmploymentType",VEFEntityEmploymentType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^CodedAttributeType",VEFCodedAttributeType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityNameType",VEFEntityNameType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityAddressType",VEFEntityAddressType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^entityDefaultQueryResultsType",VEFentityDefaultQueryResultsType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityDefaultType",VEFEntityDefaultType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityTypeDataDefaultType",VEFEntityTypeDataDefaultType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityEmailType",VEFEntityEmailType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityPhoneType",VEFEntityPhoneType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityExternalIdentifierType",VEFEntityExternalIdentifierType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^entityExternalIdentifierTypeType",VEFentityExternalIdentifierTypeType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityPrivacyPreferencesType",VEFEntityPrivacyPreferencesType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityCitizenshipType",VEFEntityCitizenshipType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^getDefaultNamesForPrincipalIdsResponse_entityNamePrincipalNames_entry",VEFgetDefaultNamesForPrincipalIdsResponse_entityNamePrincipalNames_entry.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityNamePrincipalNameType",VEFEntityNamePrincipalNameType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^entityResidencyType",VEFentityResidencyType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityTypeContactInfoType",VEFEntityTypeContactInfoType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityType",VEFEntityType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityBioDemographicsType",VEFEntityBioDemographicsType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityEthnicityType",VEFEntityEthnicityType.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityVisaType",VEFEntityVisaType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^QueryByCriteriaType",VEFQueryByCriteriaType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^AndType",VEFAndType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^CompositePredicateType",VEFCompositePredicateType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^abstractPredicate",VEFabstractPredicate.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^EqualType",VEFEqualType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^CriteriaPropertyPathValueType",VEFCriteriaPropertyPathValueType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^PropertyPathType",VEFPropertyPathType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^EqualIgnoreCaseType",VEFEqualIgnoreCaseType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^ExistsSubQueryType",VEFExistsSubQueryType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^GreaterThanType",VEFGreaterThanType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^GreaterThanOrEqualType",VEFGreaterThanOrEqualType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^InType",VEFInType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^InIgnoreCaseType",VEFInIgnoreCaseType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^LessThanType",VEFLessThanType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^LessThanOrEqualType",VEFLessThanOrEqualType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^LikeType",VEFLikeType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^LikeIgnoreCaseType",VEFLikeIgnoreCaseType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^NotEqualType",VEFNotEqualType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^NotEqualIgnoreCaseType",VEFNotEqualIgnoreCaseType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^NotInType",VEFNotInType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^NotInIgnoreCaseType",VEFNotInIgnoreCaseType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^NotLikeIgnoreCaseType",VEFNotLikeIgnoreCaseType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^NotLikeType",VEFNotLikeType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^NotNullType",VEFNotNullType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^NullType",VEFNullType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^OrType",VEFOrType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^OrderByFieldType",VEFOrderByFieldType.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^IllegalArgumentFault",VEFIllegalArgumentFault.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^IllegalStateFault",VEFIllegalStateFault.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^findAllAddressTypesResponse",VEFfindAllAddressTypesResponse.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^entityDefaultQueryResultsType_results",VEFentityDefaultQueryResultsType_results.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityDefaultType_principals",VEFEntityDefaultType_principals.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityDefaultType_entityTypeContactInfos",VEFEntityDefaultType_entityTypeContactInfos.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityDefaultType_affiliations",VEFEntityDefaultType_affiliations.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityDefaultType_externalIdentifiers",VEFEntityDefaultType_externalIdentifiers.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^findAllEmploymentStatusesResponse",VEFfindAllEmploymentStatusesResponse.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^findAllCitizenshipStatusesResponse",VEFfindAllCitizenshipStatusesResponse.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^getDefaultNamesForPrincipalIds",VEFgetDefaultNamesForPrincipalIds.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^getDefaultNamesForPrincipalIdsResponse_entityNamePrincipalNames",VEFgetDefaultNamesForPrincipalIdsResponse_entityNamePrincipalNames.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^getPrincipalsByEmployeeIdResponse",VEFgetPrincipalsByEmployeeIdResponse.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityTypeContactInfoType_addresses",VEFEntityTypeContactInfoType_addresses.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityTypeContactInfoType_emailAddresses",VEFEntityTypeContactInfoType_emailAddresses.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityTypeContactInfoType_phoneNumbers",VEFEntityTypeContactInfoType_phoneNumbers.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityType_principals",VEFEntityType_principals.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityType_entityTypeContactInfos",VEFEntityType_entityTypeContactInfos.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityType_externalIdentifiers",VEFEntityType_externalIdentifiers.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityType_affiliations",VEFEntityType_affiliations.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityType_names",VEFEntityType_names.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityType_employmentInformation",VEFEntityType_employmentInformation.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityType_citizenships",VEFEntityType_citizenships.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityType_ethnicities",VEFEntityType_ethnicities.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityType_residencies",VEFEntityType_residencies.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^EntityType_visas",VEFEntityType_visas.class);
        classNames.put("http://rice.kuali.org/kim/v2_0^^findAllExternalIdentifierTypeTypesResponse",VEFfindAllExternalIdentifierTypeTypesResponse.class);
        classNames.put("http://rice.kuali.org/core/v2_0^^QueryByCriteriaType_orderByFields",VEFQueryByCriteriaType_orderByFields.class);
    } 


    protected static final int QNAME_NAMESPACE = 0;
    private static final String TYPE_LABEL = "type";

    public VEFExtendedSoapSerializationEnvelope() {
        this(SoapEnvelope.VER11);
    }

    public VEFExtendedSoapSerializationEnvelope(int soapVersion) {
        super(soapVersion);
        implicitTypes = true;
        setAddAdornments(false);
        new VEFMarshalGuid().register(this);
        new MarshalFloat().register(this);
    }

    

    @Override
    protected void writeProperty(XmlSerializer writer, java.lang.Object obj, PropertyInfo type) throws IOException {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if (obj == null || obj== SoapPrimitive.NullNilElement) {
            writer.attribute(xsi, version >= VER12 ? NIL_LABEL : NULL_LABEL, "true");
            return;
        }
        if(writeReferenceObject(writer,obj))
        {
            return;
        }
        java.lang.Object[] qName = getInfo(null, obj);
        if (!type.multiRef && qName[2] == null )
        {

            if (!implicitTypes || (obj.getClass() != type.type && !(obj instanceof Vector ) && type.type!=java.lang.String.class  )) {
                java.lang.String xmlName=VEFHelper.getKeyByValue(classNames,obj.getClass());
                if(xmlName!=null) {
                    java.lang.String[] parts = xmlName.split("\\^\\^");
                    java.lang.String prefix = writer.getPrefix(parts[0], true);
                    writer.attribute(xsi, TYPE_LABEL, prefix + ":" + parts[1]);
                }
                else
                {
                    if(type.type instanceof String) {
                        java.lang.String xsdPrefix = writer.getPrefix(xsd, true);
                        java.lang.String myType = (java.lang.String) type.type;
                        java.lang.String[] parts = myType.split("\\^\\^");
                        if (parts.length == 2) {
                            xsdPrefix = writer.getPrefix(parts[0], true);
                            myType = parts[1];
                        }

                        writer.attribute(xsi, TYPE_LABEL, xsdPrefix + ":" + myType);
                    }
                    else
                    {
                        java.lang.String prefix = writer.getPrefix(type.namespace, true);
                        writer.attribute(xsi, TYPE_LABEL, prefix + ":" + obj.getClass().getSimpleName());
                    }

                }
            }
            //super.writeProperty(writer,obj,type);

            //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
            //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
            writeElement(writer, obj, type, qName[QNAME_MARSHAL]);
        }
        else {
            super.writeProperty(writer, obj, type);
        }
    }
    public SoapObject GetExceptionDetail(Element detailElement,java.lang.String exceptionElementNS,java.lang.String exceptionElementName)
    {
        int index=detailElement.indexOf(exceptionElementNS,exceptionElementName,0);
        if(index>-1)
        {
            Element errorElement=detailElement.getElement(index);
            return GetSoapObject(errorElement);
        }
        return null;
    }

    public SoapObject GetSoapObject(Element detailElement) {
        try{
            XmlSerializer xmlSerializer = XmlPullParserFactory.newInstance().newSerializer();
            StringWriter writer = new StringWriter();
            xmlSerializer.setOutput(writer);
            detailElement.write(xmlSerializer);
            xmlSerializer.flush();

            XmlPullParser xpp = new KXmlParser();
            xpp.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES, true);

            xpp.setInput(new StringReader(writer.toString()));
            xpp.nextTag();
            SoapObject soapObj = new SoapObject(detailElement.getNamespace(),detailElement.getName());
            readSerializable(xpp,soapObj);
            return soapObj;
        }
        catch (java.lang.Exception ex)
        {
            ex.printStackTrace();
        }
        return null;
    }

    public java.lang.Object GetHeader(Element detailElement) {
        if(detailElement.getChildCount()>0 && detailElement.getText(0)!=null)
        {
            SoapPrimitive primitive = new SoapPrimitive(detailElement.getNamespace(),detailElement.getName(),detailElement.getText(0));
            return  primitive;
        }
    
        return GetSoapObject(detailElement);
    }

    private Object createObject(Object soap, Class cl) throws InstantiationException, IllegalAccessException, NoSuchMethodException, InvocationTargetException {
        Object obj=cl.newInstance();
        Method ctor = obj.getClass().getMethod("loadFromSoap",Object.class,VEFExtendedSoapSerializationEnvelope.class);
        ctor.invoke(obj,soap,this);
        return obj;
    }

    public java.lang.Object get(java.lang.Object soap,java.lang.Class cl,boolean typeFromClass)
    {
        if(soap==null)
        {
            return null;
        }
        try
        {
            if(typeFromClass)
            {
                return createObject(soap, cl);
            }
            java.lang.Object refAttr=getReference(soap);
            if (refAttr != null)
            {
                return refAttr;
            }
            else
            {
                if(soap instanceof SoapObject)
                {
                    if(cl ==SoapObject.class)
                    {
                        return soap;
                    }
                    java.lang.String key=String.format("%s^^%s",((SoapObject)soap).getNamespace(),((SoapObject)soap).getName());
                    if(classNames.containsKey(key))
                    {
                        cl=classNames.get(key);
                    }
                }
                return createObject(soap, cl);
            }
        }
        catch (java.lang.Exception ex)
        {
            ex.printStackTrace();
            return null;
        }
    }

    public java.lang.Object getSpecificType(java.lang.Object obj)
    {
        if(obj==null)
        {
            return null;
        }
        if(obj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)obj;
            java.lang.String key=soapObject.getNamespace()+"^^"+soapObject.getName();
            if(classNames.containsKey(key))
            {
                java.lang.Class cl=classNames.get(key);
                try
                {
                    return createObject(soapObject, cl);
                } 
                catch (java.lang.Exception e)
                {
                    e.printStackTrace();
                }
            }
        }

        return obj;
    }

    public static java.lang.Object getXSDType(java.lang.Object param)
    {
        if(param==null)
        {
            return null;
        }
        java.lang.Class obj=param.getClass();
        if(obj.equals(java.lang.String.class))
        {
            return "string";
        }
        if(obj.equals(int.class) || obj.equals(java.lang.Integer.class))
        {
            return "int";
        }
        if(obj.equals(float.class) || obj.equals(java.lang.Float.class))
        {
            return "float";
        }
        if(obj.equals(double.class) || obj.equals(java.lang.Double.class))
        {
            return "double";
        }
        if(obj.equals(java.math.BigDecimal.class))
        {
            return "decimal";
        }
        if(obj.equals(short.class) || obj.equals(java.lang.Short.class))
        {
            return "short";
        }
        if(obj.equals(long.class) || obj.equals(java.lang.Long.class))
        {
            return "long";
        }
        if(obj.equals(boolean.class) || obj.equals(java.lang.Boolean.class))
        {
            return "boolean";
        }
        java.lang.String xmlName=VEFHelper.getKeyByValue(classNames,obj);
        if(xmlName==null)
        {
            return obj;
        }
        return xmlName;
    }
} 

