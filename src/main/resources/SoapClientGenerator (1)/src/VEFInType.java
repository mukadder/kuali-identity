package com.example.testSoap.wcf;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.2.8.3
//
// Created by Quasar Development 
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;
import java.math.BigInteger;
import java.math.BigDecimal;

public class VEFInType extends VEFabstractPredicate implements KvmSerializable
{

    
    public ArrayList< String> stringValue =new ArrayList<String >();
    
    public ArrayList< java.util.Date> dateTimeValue =new ArrayList<java.util.Date >();
    
    public ArrayList< BigInteger> integerValue =new ArrayList<BigInteger >();
    
    public ArrayList< BigDecimal> kualiDecimalValue =new ArrayList<BigDecimal >();
    
    public ArrayList< BigDecimal> kualiPercentValue =new ArrayList<BigDecimal >();
    
    public ArrayList< BigInteger> kualiIntegerValue =new ArrayList<BigInteger >();
    
    public ArrayList< BigDecimal> decimalValue =new ArrayList<BigDecimal >();
    
    public String propertyPath;
    

    
    
    @Override
    public void loadFromSoap(java.lang.Object paramObj,VEFExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        super.loadFromSoap(paramObj, __envelope);
        if (inObj.hasAttribute("propertyPath"))
        {	
            java.lang.Object j = inObj.getAttribute("propertyPath");
            if (j != null)
            {
                propertyPath = j.toString();
            }
        }

    }

    @Override
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,VEFExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("stringValue"))
        {
            if(obj!=null)
            {
                if(this.stringValue==null)
                {
                    this.stringValue = new java.util.ArrayList< String>();
                }
                java.lang.Object j =obj;
                String j1= j.toString();
                this.stringValue.add(j1);
            }
            return true;
        }
        if (info.name.equals("dateTimeValue"))
        {
            if(obj!=null)
            {
                if(this.dateTimeValue==null)
                {
                    this.dateTimeValue = new java.util.ArrayList< java.util.Date>();
                }
                java.lang.Object j =obj;
                java.util.Date j1= VEFHelper.ConvertFromWebService(j.toString());
                this.dateTimeValue.add(j1);
            }
            return true;
        }
        if (info.name.equals("integerValue"))
        {
            if(obj!=null)
            {
                if(this.integerValue==null)
                {
                    this.integerValue = new java.util.ArrayList< BigInteger>();
                }
                java.lang.Object j =obj;
                BigInteger j1= new BigInteger(j.toString());
                this.integerValue.add(j1);
            }
            return true;
        }
        if (info.name.equals("kualiDecimalValue"))
        {
            if(obj!=null)
            {
                if(this.kualiDecimalValue==null)
                {
                    this.kualiDecimalValue = new java.util.ArrayList< BigDecimal>();
                }
                java.lang.Object j =obj;
                BigDecimal j1= new BigDecimal(j.toString());
                this.kualiDecimalValue.add(j1);
            }
            return true;
        }
        if (info.name.equals("kualiPercentValue"))
        {
            if(obj!=null)
            {
                if(this.kualiPercentValue==null)
                {
                    this.kualiPercentValue = new java.util.ArrayList< BigDecimal>();
                }
                java.lang.Object j =obj;
                BigDecimal j1= new BigDecimal(j.toString());
                this.kualiPercentValue.add(j1);
            }
            return true;
        }
        if (info.name.equals("kualiIntegerValue"))
        {
            if(obj!=null)
            {
                if(this.kualiIntegerValue==null)
                {
                    this.kualiIntegerValue = new java.util.ArrayList< BigInteger>();
                }
                java.lang.Object j =obj;
                BigInteger j1= new BigInteger(j.toString());
                this.kualiIntegerValue.add(j1);
            }
            return true;
        }
        if (info.name.equals("decimalValue"))
        {
            if(obj!=null)
            {
                if(this.decimalValue==null)
                {
                    this.decimalValue = new java.util.ArrayList< BigDecimal>();
                }
                java.lang.Object j =obj;
                BigDecimal j1= new BigDecimal(j.toString());
                this.decimalValue.add(j1);
            }
            return true;
        }
        return super.loadProperty(info,soapObject,__envelope);
    }
    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex>=count+0 && propertyIndex < count+0+this.stringValue.size())
        {
            java.lang.Object stringValue = this.stringValue.get(propertyIndex-(count+0));
            return stringValue;
        }
        if(propertyIndex>=count+0+this.stringValue.size() && propertyIndex < count+0+this.stringValue.size()+this.dateTimeValue.size())
        {
            java.lang.Object dateTimeValue = this.dateTimeValue.get(propertyIndex-(count+0+this.stringValue.size()));
            return dateTimeValue!=null?VEFHelper.getDateTimeFormat().format(dateTimeValue):SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=count+0+this.stringValue.size()+this.dateTimeValue.size() && propertyIndex < count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size())
        {
            java.lang.Object integerValue = this.integerValue.get(propertyIndex-(count+0+this.stringValue.size()+this.dateTimeValue.size()));
            return integerValue!=null?integerValue.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size() && propertyIndex < count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size())
        {
            java.lang.Object kualiDecimalValue = this.kualiDecimalValue.get(propertyIndex-(count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()));
            return kualiDecimalValue!=null?kualiDecimalValue.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size() && propertyIndex < count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size()+this.kualiPercentValue.size())
        {
            java.lang.Object kualiPercentValue = this.kualiPercentValue.get(propertyIndex-(count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size()));
            return kualiPercentValue!=null?kualiPercentValue.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size()+this.kualiPercentValue.size() && propertyIndex < count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size()+this.kualiPercentValue.size()+this.kualiIntegerValue.size())
        {
            java.lang.Object kualiIntegerValue = this.kualiIntegerValue.get(propertyIndex-(count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size()+this.kualiPercentValue.size()));
            return kualiIntegerValue!=null?kualiIntegerValue.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size()+this.kualiPercentValue.size()+this.kualiIntegerValue.size() && propertyIndex < count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size()+this.kualiPercentValue.size()+this.kualiIntegerValue.size()+this.decimalValue.size())
        {
            java.lang.Object decimalValue = this.decimalValue.get(propertyIndex-(count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size()+this.kualiPercentValue.size()+this.kualiIntegerValue.size()));
            return decimalValue!=null?decimalValue.toString():SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+0+stringValue.size()+dateTimeValue.size()+integerValue.size()+kualiDecimalValue.size()+kualiPercentValue.size()+kualiIntegerValue.size()+decimalValue.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex>=count+0 && propertyIndex < count+0+this.stringValue.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "stringValue";
            info.namespace= "http://rice.kuali.org/core/v2_0";
        }
        if(propertyIndex>=count+0+this.stringValue.size() && propertyIndex < count+0+this.stringValue.size()+this.dateTimeValue.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "dateTimeValue";
            info.namespace= "http://rice.kuali.org/core/v2_0";
        }
        if(propertyIndex>=count+0+this.stringValue.size()+this.dateTimeValue.size() && propertyIndex < count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "integerValue";
            info.namespace= "http://rice.kuali.org/core/v2_0";
        }
        if(propertyIndex>=count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size() && propertyIndex < count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "kualiDecimalValue";
            info.namespace= "http://rice.kuali.org/core/v2_0";
        }
        if(propertyIndex>=count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size() && propertyIndex < count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size()+this.kualiPercentValue.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "kualiPercentValue";
            info.namespace= "http://rice.kuali.org/core/v2_0";
        }
        if(propertyIndex>=count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size()+this.kualiPercentValue.size() && propertyIndex < count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size()+this.kualiPercentValue.size()+this.kualiIntegerValue.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "kualiIntegerValue";
            info.namespace= "http://rice.kuali.org/core/v2_0";
        }
        if(propertyIndex>=count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size()+this.kualiPercentValue.size()+this.kualiIntegerValue.size() && propertyIndex < count+0+this.stringValue.size()+this.dateTimeValue.size()+this.integerValue.size()+this.kualiDecimalValue.size()+this.kualiPercentValue.size()+this.kualiIntegerValue.size()+this.decimalValue.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "decimalValue";
            info.namespace= "http://rice.kuali.org/core/v2_0";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }



    @Override
    public int getAttributeCount() {
        return 1;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        if(index==0)
        {
            info.name = "propertyPath";
            info.namespace= "";
            if(this.propertyPath!=null)
            {
                info.setValue(this.propertyPath);
            }
            
        }
    }

    @Override
    public void getAttribute(int i, AttributeInfo attributeInfo) {

    }

    @Override
    public void setAttribute(AttributeInfo attributeInfo) {

    }    
}

